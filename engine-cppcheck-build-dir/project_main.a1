<?xml version="1.0"?>
<analyzerinfo checksum="1198578565">
  <FileInfo check="Bounds checking">
    <ArraySize array="GameCppIncludes" size="5"/>
    <ArraySize array="GameHeaderIncludes" size="5"/>
    <ArraySize array="GameStateFields" size="2"/>
  </FileInfo>
        <error id="deallocDealloc" severity="error" msg="Deallocating a deallocated pointer: File" verbose="Deallocating a deallocated pointer: File" cwe="415">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\glitch_tool\project_main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\glitch_tool\project_main.cpp" line="317"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\glitch_tool\project_main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\glitch_tool\project_main.cpp" line="291"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\glitch_tool\project_main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\glitch_tool\project_main.cpp" line="304"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\glitch_tool\project_main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\glitch_tool\project_main.cpp" line="329"/>
        </error>
  <FileInfo check="Bounds checking">
    <ArraySize array="GameCppIncludes" size="5"/>
    <ArraySize array="GameHeaderIncludes" size="5"/>
    <ArraySize array="GameStateFields" size="2"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <ArraySize array="GameCppIncludes" size="5"/>
    <ArraySize array="GameHeaderIncludes" size="5"/>
    <ArraySize array="GameStateFields" size="2"/>
  </FileInfo>
        <error id="purgedConfiguration" severity="information" msg="The configuration &apos;__linux&apos; was not checked because its code equals another one." verbose="The configuration &apos;__linux&apos; was not checked because its code equals another one.">
            <location file="C:\Users\Niels\Documents\glitchheartengine\glitch_tool\project_main.cpp" line="0"/>
        </error>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="CreateProject" lineNumber="162"/>
    <functiondecl functionName="CreateProject" lineNumber="162"/>
    <functiondecl functionName="RemoveDirectory" lineNumber="95"/>
    <functiondecl functionName="CreateProject" lineNumber="162"/>
    <functioncall functionName="ActualBuildBat"/>
    <functioncall functionName="ActualBuildSh"/>
    <functioncall functionName="ActualBuildShOSX"/>
    <functioncall functionName="Binary"/>
    <functioncall functionName="Buf"/>
    <functioncall functionName="Buff"/>
    <functioncall functionName="BuildBat"/>
    <functioncall functionName="BuildSh"/>
    <functioncall functionName="BuildShOSX"/>
    <functioncall functionName="Concat"/>
    <functioncall functionName="ConfigFile"/>
    <functioncall functionName="CopyFile"/>
    <functioncall functionName="CreateDirectoryA"/>
    <functioncall functionName="D"/>
    <functioncall functionName="Delim"/>
    <functioncall functionName="DirectoryBuffer"/>
    <functioncall functionName="Dst"/>
    <functioncall functionName="EnginePath"/>
    <functioncall functionName="F_OK"/>
    <functioncall functionName="File"/>
    <functioncall functionName="H"/>
    <functioncall functionName="HMODULE"/>
    <functioncall functionName="In"/>
    <functioncall functionName="InitUpdate"/>
    <functioncall functionName="Input"/>
    <functioncall functionName="Len"/>
    <functioncall functionName="M"/>
    <functioncall functionName="N"/>
    <functioncall functionName="NULL"/>
    <functioncall functionName="Name"/>
    <functioncall functionName="Out"/>
    <functioncall functionName="Overwrite"/>
    <functioncall functionName="Path"/>
    <functioncall functionName="PathFileExists"/>
    <functioncall functionName="R"/>
    <functioncall functionName="R2"/>
    <functioncall functionName="RemoveDirectory"/>
    <functioncall functionName="Result"/>
    <functioncall functionName="RunBat"/>
    <functioncall functionName="RunSh"/>
    <functioncall functionName="RunShOSX"/>
    <functioncall functionName="S"/>
    <functioncall functionName="S1"/>
    <functioncall functionName="S2"/>
    <functioncall functionName="S_ISDIR"/>
    <functioncall functionName="Src"/>
    <functioncall functionName="Start"/>
    <functioncall functionName="StatBuf"/>
    <functioncall functionName="TimeCmd"/>
    <functioncall functionName="Write"/>
    <functioncall functionName="WriteInclude"/>
    <functioncall functionName="WriteNewLine"/>
    <functioncall functionName="WriteString"/>
    <functioncall functionName="WriteTab"/>
    <functioncall functionName="access"/>
    <functioncall functionName="char"/>
    <functioncall functionName="closedir"/>
    <functioncall functionName="continue"/>
    <functioncall functionName="d_name"/>
    <functioncall functionName="double"/>
    <functioncall functionName="false"/>
    <functioncall functionName="fclose"/>
    <functioncall functionName="fgets"/>
    <functioncall functionName="float"/>
    <functioncall functionName="fopen"/>
    <functioncall functionName="for"/>
    <functioncall functionName="fread"/>
    <functioncall functionName="free"/>
    <functioncall functionName="fwrite"/>
    <functioncall functionName="getcwd"/>
    <functioncall functionName="getenv"/>
    <functioncall functionName="i32"/>
    <functioncall functionName="if"/>
    <functioncall functionName="int16_t"/>
    <functioncall functionName="int32_t"/>
    <functioncall functionName="int64_t"/>
    <functioncall functionName="int8_t"/>
    <functioncall functionName="malloc"/>
    <functioncall functionName="mkdir"/>
    <functioncall functionName="opendir"/>
    <functioncall functionName="printf"/>
    <functioncall functionName="readdir"/>
    <functioncall functionName="return"/>
    <functioncall functionName="rmdir"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="snprintf"/>
    <functioncall functionName="st_mode"/>
    <functioncall functionName="stat"/>
    <functioncall functionName="stdin"/>
    <functioncall functionName="strcat"/>
    <functioncall functionName="strcmp"/>
    <functioncall functionName="strcpy"/>
    <functioncall functionName="strlen"/>
    <functioncall functionName="strpbrk"/>
    <functioncall functionName="system"/>
    <functioncall functionName="true"/>
    <functioncall functionName="uint16_t"/>
    <functioncall functionName="uint32_t"/>
    <functioncall functionName="uint64_t"/>
    <functioncall functionName="uint8_t"/>
    <functioncall functionName="unlink"/>
    <functioncall functionName="void"/>
    <functioncall functionName="while"/>
  </FileInfo>
</analyzerinfo>
