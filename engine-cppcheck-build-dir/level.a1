<?xml version="1.0"?>
<analyzerinfo checksum="2494518400">
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;LineBuffer&apos; can be reduced." verbose="The scope of the variable &apos;LineBuffer&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\old_files\level.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\old_files\level.cpp" line="164"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;TypeName&apos; can be reduced." verbose="The scope of the variable &apos;TypeName&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\old_files\level.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\old_files\level.cpp" line="433"/>
        </error>
        <error id="invalidscanf" severity="warning" msg="sscanf() without field width limits can crash with huge input data." verbose="sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\012\012Sample program that can crash:\012\012#include &lt;stdio.h&gt;\012int main()\012{\012    char c[5];\012    scanf(&quot;%s&quot;, c);\012    return 0;\012}\012\012Typing in 5 or more characters may make the program crash. The correct usage here is &apos;scanf(&quot;%4s&quot;, c);&apos;, as the maximum field width does not include the terminating null byte.\012Source: http://linux.die.net/man/3/scanf\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c" cwe="119">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\old_files\level.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\old_files\level.cpp" line="223"/>
        </error>
        <error id="invalidscanf" severity="warning" msg="sscanf() without field width limits can crash with huge input data." verbose="sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\012\012Sample program that can crash:\012\012#include &lt;stdio.h&gt;\012int main()\012{\012    char c[5];\012    scanf(&quot;%s&quot;, c);\012    return 0;\012}\012\012Typing in 5 or more characters may make the program crash. The correct usage here is &apos;scanf(&quot;%4s&quot;, c);&apos;, as the maximum field width does not include the terminating null byte.\012Source: http://linux.die.net/man/3/scanf\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c" cwe="119">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\old_files\level.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\old_files\level.cpp" line="227"/>
        </error>
        <error id="invalidscanf" severity="warning" msg="sscanf() without field width limits can crash with huge input data." verbose="sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\012\012Sample program that can crash:\012\012#include &lt;stdio.h&gt;\012int main()\012{\012    char c[5];\012    scanf(&quot;%s&quot;, c);\012    return 0;\012}\012\012Typing in 5 or more characters may make the program crash. The correct usage here is &apos;scanf(&quot;%4s&quot;, c);&apos;, as the maximum field width does not include the terminating null byte.\012Source: http://linux.die.net/man/3/scanf\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c" cwe="119">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\old_files\level.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\old_files\level.cpp" line="247"/>
        </error>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="LoadOrthogonalTilemapBuffer" lineNumber="1"/>
    <functiondecl functionName="LoadTilemapBuffer" lineNumber="51"/>
    <functiondecl functionName="UpdateTileData" lineNumber="103"/>
    <functiondecl functionName="SaveTilesheetMetaFile" lineNumber="115"/>
    <functiondecl functionName="LoadTilesheetMetaFile" lineNumber="158"/>
    <functiondecl functionName="LoadLevelFromFile" lineNumber="209"/>
    <functiondecl functionName="SaveLevelToFile" lineNumber="384"/>
    <functiondecl functionName="CreateNewLevelWithSize" lineNumber="508"/>
    <functioncall functionName="Assert"/>
    <functioncall functionName="BufferHandle"/>
    <functioncall functionName="Center"/>
    <functioncall functionName="CollisionAABB"/>
    <functioncall functionName="Concat"/>
    <functioncall functionName="Consumed"/>
    <functioncall functionName="CorrectX"/>
    <functioncall functionName="CorrectY"/>
    <functioncall functionName="Data"/>
    <functioncall functionName="EFlag_IsTemporary"/>
    <functioncall functionName="EnemyType"/>
    <functioncall functionName="Entity"/>
    <functioncall functionName="EntityCount"/>
    <functioncall functionName="File"/>
    <functioncall functionName="FileExists"/>
    <functioncall functionName="FilePath"/>
    <functioncall functionName="Floor"/>
    <functioncall functionName="GameCameraHandle"/>
    <functioncall functionName="GameState"/>
    <functioncall functionName="Height"/>
    <functioncall functionName="I"/>
    <functioncall functionName="Index"/>
    <functioncall functionName="IndexWidth"/>
    <functioncall functionName="IsSet"/>
    <functioncall functionName="IsSolid"/>
    <functioncall functionName="Layer"/>
    <functioncall functionName="Level"/>
    <functioncall functionName="LevelType"/>
    <functioncall functionName="Level_Isometric"/>
    <functioncall functionName="Level_Orthogonal"/>
    <functioncall functionName="Line"/>
    <functioncall functionName="LineBuffer"/>
    <functioncall functionName="LoadBonfireData"/>
    <functioncall functionName="LoadBuffer"/>
    <functioncall functionName="LoadLevelFromFile"/>
    <functioncall functionName="LoadOrthogonalTilemapBuffer"/>
    <functioncall functionName="LoadPlayerData"/>
    <functioncall functionName="LoadSkeletonData"/>
    <functioncall functionName="LoadTilesheetMetaFile"/>
    <functioncall functionName="MapHeight"/>
    <functioncall functionName="MapWidth"/>
    <functioncall functionName="Name"/>
    <functioncall functionName="New"/>
    <functioncall functionName="NewLevel"/>
    <functioncall functionName="NumTiles"/>
    <functioncall functionName="PathIndex"/>
    <functioncall functionName="PathPtr"/>
    <functioncall functionName="PlayerIndex"/>
    <functioncall functionName="PlayerStartPosition"/>
    <functioncall functionName="Pos"/>
    <functioncall functionName="Ptr"/>
    <functioncall functionName="PushArray"/>
    <functioncall functionName="PushString"/>
    <functioncall functionName="PushTempArray"/>
    <functioncall functionName="Renderer"/>
    <functioncall functionName="SaveLevelToFile"/>
    <functioncall functionName="SaveTilesheetMetaFile"/>
    <functioncall functionName="SheetName"/>
    <functioncall functionName="Size"/>
    <functioncall functionName="SoundCommands"/>
    <functioncall functionName="StartsWith"/>
    <functioncall functionName="TexCoordX"/>
    <functioncall functionName="TexCoordXHigh"/>
    <functioncall functionName="TexCoordY"/>
    <functioncall functionName="TexCoordYHigh"/>
    <functioncall functionName="TextureName"/>
    <functioncall functionName="TextureOffset"/>
    <functioncall functionName="TextureSize"/>
    <functioncall functionName="TileHeight"/>
    <functioncall functionName="TileIndex"/>
    <functioncall functionName="TileWidth"/>
    <functioncall functionName="Tilemap"/>
    <functioncall functionName="ToIsometric"/>
    <functioncall functionName="Type"/>
    <functioncall functionName="TypeIndex"/>
    <functioncall functionName="TypeName"/>
    <functioncall functionName="VertexBuffer"/>
    <functioncall functionName="WIndex"/>
    <functioncall functionName="WaypointCount"/>
    <functioncall functionName="Width"/>
    <functioncall functionName="WorldArena"/>
    <functioncall functionName="X"/>
    <functioncall functionName="Y"/>
    <functioncall functionName="break"/>
    <functioncall functionName="false"/>
    <functioncall functionName="fclose"/>
    <functioncall functionName="fgets"/>
    <functioncall functionName="fopen"/>
    <functioncall functionName="for"/>
    <functioncall functionName="fprintf"/>
    <functioncall functionName="i32"/>
    <functioncall functionName="if"/>
    <functioncall functionName="r32"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="sscanf"/>
    <functioncall functionName="strtol"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="tile_data"/>
    <functioncall functionName="true"/>
    <functioncall functionName="u32"/>
    <functioncall functionName="v2"/>
    <functioncall functionName="v3"/>
    <functioncall functionName="while"/>
    <functioncall functionName="x"/>
    <functioncall functionName="y"/>
    <functioncall functionName="z"/>
  </FileInfo>
</analyzerinfo>
