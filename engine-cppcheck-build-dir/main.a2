<?xml version="1.0"?>
<analyzerinfo checksum="2562866637">
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;i32&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;i32&apos;." cwe="686">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\log.h" line="23"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;i32&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;i32&apos;." cwe="686">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\shared.h" line="58"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;i32&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;i32&apos;." cwe="686">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\shared.h" line="81"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;i32&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;i32&apos;." cwe="686">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\shared.h" line="81"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 4) requires &apos;int&apos; but the argument type is &apos;i32&apos;." verbose="%d in format string (no. 4) requires &apos;int&apos; but the argument type is &apos;i32&apos;." cwe="686">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\shared.h" line="81"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;i32&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;i32&apos;." cwe="686">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\shared.h" line="122"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;i32&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;i32&apos;." cwe="686">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="1056"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;i32&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;i32&apos;." cwe="686">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="1056"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;i32&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;i32&apos;." cwe="686">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="1056"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 4) requires &apos;int&apos; but the argument type is &apos;i32&apos;." verbose="%d in format string (no. 4) requires &apos;int&apos; but the argument type is &apos;i32&apos;." cwe="686">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="1056"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;i32&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;i32&apos;." cwe="686">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="1810"/>
        </error>
        <error id="invalidScanfArgType_int" severity="warning" msg="%d in format string (no. 1) requires &apos;int *&apos; but the argument type is &apos;i32 *&apos;." verbose="%d in format string (no. 1) requires &apos;int *&apos; but the argument type is &apos;i32 *&apos;." cwe="686">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" line="216"/>
        </error>
        <error id="invalidScanfArgType_int" severity="warning" msg="%d in format string (no. 1) requires &apos;int *&apos; but the argument type is &apos;i32 *&apos;." verbose="%d in format string (no. 1) requires &apos;int *&apos; but the argument type is &apos;i32 *&apos;." cwe="686">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" line="220"/>
        </error>
        <error id="invalidScanfArgType_int" severity="warning" msg="%d in format string (no. 1) requires &apos;int *&apos; but the argument type is &apos;i32 *&apos;." verbose="%d in format string (no. 1) requires &apos;int *&apos; but the argument type is &apos;i32 *&apos;." cwe="686">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" line="224"/>
        </error>
        <error id="invalidScanfArgType_int" severity="warning" msg="%d in format string (no. 1) requires &apos;int *&apos; but the argument type is &apos;i32 *&apos;." verbose="%d in format string (no. 1) requires &apos;int *&apos; but the argument type is &apos;i32 *&apos;." cwe="686">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" line="228"/>
        </error>
        <error id="invalidScanfArgType_int" severity="warning" msg="%d in format string (no. 1) requires &apos;int *&apos; but the argument type is &apos;b32 *&apos;." verbose="%d in format string (no. 1) requires &apos;int *&apos; but the argument type is &apos;b32 *&apos;." cwe="686">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" line="244"/>
        </error>
        <error id="invalidScanfArgType_int" severity="warning" msg="%d in format string (no. 1) requires &apos;int *&apos; but the argument type is &apos;b32 *&apos;." verbose="%d in format string (no. 1) requires &apos;int *&apos; but the argument type is &apos;b32 *&apos;." cwe="686">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" line="260"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\engine_memory.h" line="54"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\engine_memory.h" line="274"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\gmap.h" line="183"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\rendering.h" line="453"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\gmap.cpp" line="98"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\fmod_sound.cpp" line="119"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="60"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="1622"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="1941"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="2049"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="2127"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\vulkan_rendering.cpp" line="356"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" line="280"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" line="298"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" line="316"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;Result&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;Result&apos; is reassigned a value before the old one has been used." cwe="563">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\engine_math.h" line="1580"/>
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\engine_math.h" line="1579"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;DebugArena&apos; is assigned a value that is never used." verbose="Variable &apos;DebugArena&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" line="296"/>
        </error>
  <FileInfo check="Bounds checking">
    <ArraySize array="DeviceExtensions" size="1"/>
    <ArraySize array="ValidationLayers" size="2"/>
  </FileInfo>
        <error id="invalidscanf" severity="warning" msg="sscanf() without field width limits can crash with huge input data." verbose="sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\012\012Sample program that can crash:\012\012#include &lt;stdio.h&gt;\012int main()\012{\012    char c[5];\012    scanf(&quot;%s&quot;, c);\012    return 0;\012}\012\012Typing in 5 or more characters may make the program crash. The correct usage here is &apos;scanf(&quot;%4s&quot;, c);&apos;, as the maximum field width does not include the terminating null byte.\012Source: http://linux.die.net/man/3/scanf\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c" cwe="119">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" line="198"/>
        </error>
        <error id="invalidscanf" severity="warning" msg="sscanf() without field width limits can crash with huge input data." verbose="sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\012\012Sample program that can crash:\012\012#include &lt;stdio.h&gt;\012int main()\012{\012    char c[5];\012    scanf(&quot;%s&quot;, c);\012    return 0;\012}\012\012Typing in 5 or more characters may make the program crash. The correct usage here is &apos;scanf(&quot;%4s&quot;, c);&apos;, as the maximum field width does not include the terminating null byte.\012Source: http://linux.die.net/man/3/scanf\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c" cwe="119">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" line="203"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\engine_math.h" line="1288"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\engine_math.h" line="1290"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\engine_math.h" line="1293"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\engine_memory.h" line="162"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\engine_memory.h" line="174"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\engine_memory.h" line="214"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\engine_memory.h" line="227"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\engine_memory.h" line="239"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\engine_memory.h" line="251"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\log.h" line="30"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\log.h" line="38"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\gmap.h" line="183"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\rendering.h" line="453"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\gmap.cpp" line="40"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.h" line="38"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\animation.cpp" line="46"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\animation.cpp" line="60"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\animation.cpp" line="104"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\animation.cpp" line="138"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\animation.cpp" line="156"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\animation.cpp" line="164"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\animation.cpp" line="180"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\animation.cpp" line="195"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\animation.cpp" line="204"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\animation.cpp" line="251"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\timers.h" line="77"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\fmod_sound.cpp" line="22"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\fmod_sound.cpp" line="117"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\keys_glfw.h" line="224"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="442"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="484"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="908"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="916"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="1292"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="1491"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="1785"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="1807"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="1896"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="1911"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="1929"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="1939"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="2047"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="2125"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\opengl_rendering.cpp" line="2249"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\vulkan_rendering.cpp" line="35"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\vulkan_rendering.cpp" line="39"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\vulkan_rendering.cpp" line="64"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\vulkan_rendering.cpp" line="68"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\vulkan_rendering.cpp" line="103"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\vulkan_rendering.cpp" line="161"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\vulkan_rendering.cpp" line="177"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\vulkan_rendering.cpp" line="217"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\vulkan_rendering.cpp" line="219"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\vulkan_rendering.cpp" line="222"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\vulkan_rendering.cpp" line="321"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\vulkan_rendering.cpp" line="746"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" line="111"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" line="124"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" line="136"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" line="172"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" line="406"/>
        </error>
  <FileInfo check="Bounds checking">
    <ArraySize array="DeviceExtensions" size="1"/>
    <ArraySize array="ValidationLayers" size="2"/>
  </FileInfo>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\win32_platform.cpp" line="69"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\win32_platform.cpp" line="72"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\win32_platform.cpp" line="79"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\win32_platform.cpp" line="113"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;Tok&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;Tok&apos; is reassigned a value before the old one has been used." cwe="563">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\win32_platform.cpp" line="248"/>
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\win32_platform.cpp" line="247"/>
        </error>
  <FileInfo check="Bounds checking">
    <ArraySize array="DeviceExtensions" size="1"/>
    <ArraySize array="ValidationLayers" size="2"/>
  </FileInfo>
        <error id="clarifyCalculation" severity="style" msg="Clarify calculation precedence for &apos;&amp;&apos; and &apos;?&apos;." verbose="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." cwe="783">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\win32_platform.cpp" line="298"/>
        </error>
        <error id="clarifyCalculation" severity="style" msg="Clarify calculation precedence for &apos;&amp;&apos; and &apos;?&apos;." verbose="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." cwe="783">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\win32_platform.cpp" line="299"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\win32_platform.cpp" line="96"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\win32_platform.cpp" line="109"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\win32_platform.cpp" line="120"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\win32_platform.cpp" line="189"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\osx_platform.cpp" line="136"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\osx_platform.cpp" line="140"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\osx_platform.cpp" line="182"/>
        </error>
  <FileInfo check="Bounds checking">
    <ArraySize array="DeviceExtensions" size="1"/>
    <ArraySize array="ValidationLayers" size="2"/>
  </FileInfo>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\osx_platform.cpp" line="165"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\osx_platform.cpp" line="178"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\osx_platform.cpp" line="189"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\linux_platform.cpp" line="138"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\linux_platform.cpp" line="142"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\linux_platform.cpp" line="182"/>
        </error>
  <FileInfo check="Bounds checking">
    <ArraySize array="DeviceExtensions" size="1"/>
    <ArraySize array="ValidationLayers" size="2"/>
  </FileInfo>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\linux_platform.cpp" line="165"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\linux_platform.cpp" line="178"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file0="C:\Users\Niels\Documents\glitchheartengine\src\main.cpp" file="C:\Users\Niels\Documents\glitchheartengine\src\linux_platform.cpp" line="189"/>
        </error>
  <FileInfo check="Bounds checking">
    <ArraySize array="DeviceExtensions" size="1"/>
    <ArraySize array="ValidationLayers" size="2"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <ArraySize array="DeviceExtensions" size="1"/>
    <ArraySize array="ValidationLayers" size="2"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <ArraySize array="DeviceExtensions" size="1"/>
    <ArraySize array="ValidationLayers" size="2"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <ArraySize array="DeviceExtensions" size="1"/>
    <ArraySize array="ValidationLayers" size="2"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <ArraySize array="DeviceExtensions" size="1"/>
    <ArraySize array="ValidationLayers" size="2"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="LoadGameCode" lineNumber="52"/>
    <functiondecl functionName="UnloadGameCode" lineNumber="73"/>
    <functiondecl functionName="ReloadGameCode" lineNumber="85"/>
    <functiondecl functionName="ReloadLibraries" lineNumber="92"/>
    <functiondecl functionName="SetInvalidKeys" lineNumber="108"/>
    <functiondecl functionName="SetControllerInvalidKeys" lineNumber="121"/>
    <functiondecl functionName="SetMouseInvalidKeys" lineNumber="133"/>
    <functiondecl functionName="LoadConfig" lineNumber="149"/>
    <functiondecl functionName="main" lineNumber="268"/>
    <functiondecl functionName="LoadGameCode" lineNumber="52"/>
    <functiondecl functionName="UnloadGameCode" lineNumber="73"/>
    <functiondecl functionName="ReloadGameCode" lineNumber="85"/>
    <functiondecl functionName="ReloadLibraries" lineNumber="92"/>
    <functiondecl functionName="SetInvalidKeys" lineNumber="108"/>
    <functiondecl functionName="SetControllerInvalidKeys" lineNumber="121"/>
    <functiondecl functionName="SetMouseInvalidKeys" lineNumber="133"/>
    <functiondecl functionName="LoadConfig" lineNumber="149"/>
    <functiondecl functionName="main" lineNumber="268"/>
    <functiondecl functionName="LoadGameCode" lineNumber="52"/>
    <functiondecl functionName="UnloadGameCode" lineNumber="73"/>
    <functiondecl functionName="ReloadGameCode" lineNumber="85"/>
    <functiondecl functionName="ReloadLibraries" lineNumber="92"/>
    <functiondecl functionName="SetInvalidKeys" lineNumber="108"/>
    <functiondecl functionName="SetControllerInvalidKeys" lineNumber="121"/>
    <functiondecl functionName="SetMouseInvalidKeys" lineNumber="133"/>
    <functiondecl functionName="LoadConfig" lineNumber="149"/>
    <functiondecl functionName="main" lineNumber="268"/>
    <functiondecl functionName="LoadGameCode" lineNumber="52"/>
    <functiondecl functionName="UnloadGameCode" lineNumber="73"/>
    <functiondecl functionName="ReloadGameCode" lineNumber="85"/>
    <functiondecl functionName="ReloadLibraries" lineNumber="92"/>
    <functiondecl functionName="SetInvalidKeys" lineNumber="108"/>
    <functiondecl functionName="SetControllerInvalidKeys" lineNumber="121"/>
    <functiondecl functionName="SetMouseInvalidKeys" lineNumber="133"/>
    <functiondecl functionName="LoadConfig" lineNumber="149"/>
    <functiondecl functionName="main" lineNumber="268"/>
    <functiondecl functionName="LoadGameCode" lineNumber="52"/>
    <functiondecl functionName="UnloadGameCode" lineNumber="73"/>
    <functiondecl functionName="ReloadGameCode" lineNumber="85"/>
    <functiondecl functionName="ReloadLibraries" lineNumber="92"/>
    <functiondecl functionName="SetInvalidKeys" lineNumber="108"/>
    <functiondecl functionName="SetControllerInvalidKeys" lineNumber="121"/>
    <functiondecl functionName="SetMouseInvalidKeys" lineNumber="133"/>
    <functiondecl functionName="LoadConfig" lineNumber="149"/>
    <functiondecl functionName="main" lineNumber="268"/>
    <functiondecl functionName="LoadGameCode" lineNumber="52"/>
    <functiondecl functionName="UnloadGameCode" lineNumber="73"/>
    <functiondecl functionName="ReloadGameCode" lineNumber="85"/>
    <functiondecl functionName="ReloadLibraries" lineNumber="92"/>
    <functiondecl functionName="SetInvalidKeys" lineNumber="108"/>
    <functiondecl functionName="SetControllerInvalidKeys" lineNumber="121"/>
    <functiondecl functionName="SetMouseInvalidKeys" lineNumber="133"/>
    <functiondecl functionName="LoadConfig" lineNumber="149"/>
    <functiondecl functionName="main" lineNumber="268"/>
    <functiondecl functionName="LoadGameCode" lineNumber="52"/>
    <functiondecl functionName="UnloadGameCode" lineNumber="73"/>
    <functiondecl functionName="ReloadGameCode" lineNumber="85"/>
    <functiondecl functionName="ReloadLibraries" lineNumber="92"/>
    <functiondecl functionName="SetInvalidKeys" lineNumber="108"/>
    <functiondecl functionName="SetControllerInvalidKeys" lineNumber="121"/>
    <functiondecl functionName="SetMouseInvalidKeys" lineNumber="133"/>
    <functiondecl functionName="LoadConfig" lineNumber="149"/>
    <functiondecl functionName="main" lineNumber="268"/>
    <functiondecl functionName="LoadGameCode" lineNumber="52"/>
    <functiondecl functionName="UnloadGameCode" lineNumber="73"/>
    <functiondecl functionName="ReloadGameCode" lineNumber="85"/>
    <functiondecl functionName="ReloadLibraries" lineNumber="92"/>
    <functiondecl functionName="SetInvalidKeys" lineNumber="108"/>
    <functiondecl functionName="SetControllerInvalidKeys" lineNumber="121"/>
    <functiondecl functionName="SetMouseInvalidKeys" lineNumber="133"/>
    <functiondecl functionName="LoadConfig" lineNumber="149"/>
    <functiondecl functionName="main" lineNumber="268"/>
    <functiondecl functionName="LoadGameCode" lineNumber="52"/>
    <functiondecl functionName="UnloadGameCode" lineNumber="73"/>
    <functiondecl functionName="ReloadGameCode" lineNumber="85"/>
    <functiondecl functionName="ReloadLibraries" lineNumber="92"/>
    <functiondecl functionName="SetInvalidKeys" lineNumber="108"/>
    <functiondecl functionName="SetControllerInvalidKeys" lineNumber="121"/>
    <functiondecl functionName="SetMouseInvalidKeys" lineNumber="133"/>
    <functiondecl functionName="LoadConfig" lineNumber="149"/>
    <functiondecl functionName="main" lineNumber="268"/>
    <functiondecl functionName="LoadGameCode" lineNumber="52"/>
    <functiondecl functionName="UnloadGameCode" lineNumber="73"/>
    <functiondecl functionName="ReloadGameCode" lineNumber="85"/>
    <functiondecl functionName="ReloadLibraries" lineNumber="92"/>
    <functiondecl functionName="SetInvalidKeys" lineNumber="108"/>
    <functiondecl functionName="SetControllerInvalidKeys" lineNumber="121"/>
    <functiondecl functionName="SetMouseInvalidKeys" lineNumber="133"/>
    <functiondecl functionName="LoadConfig" lineNumber="149"/>
    <functiondecl functionName="main" lineNumber="268"/>
    <functioncall functionName="A"/>
    <functioncall functionName="ACos"/>
    <functioncall functionName="AFlag_Zero"/>
    <functioncall functionName="APIString"/>
    <functioncall functionName="AX"/>
    <functioncall functionName="AfterFinishedAnimation"/>
    <functioncall functionName="AfterTitle"/>
    <functioncall functionName="AlignCenterY"/>
    <functioncall functionName="Alignment"/>
    <functioncall functionName="AlignmentOffset"/>
    <functioncall functionName="Alignment_Center"/>
    <functioncall functionName="Alignment_Left"/>
    <functioncall functionName="Alignment_Right"/>
    <functioncall functionName="AllocInfo"/>
    <functioncall functionName="AllocateMemory"/>
    <functioncall functionName="AllocationFlags"/>
    <functioncall functionName="Allocator"/>
    <functioncall functionName="AlphaColor"/>
    <functioncall functionName="Angle"/>
    <functioncall functionName="AnimationArena"/>
    <functioncall functionName="AnimationControllerCount"/>
    <functioncall functionName="AnimationHandle"/>
    <functioncall functionName="AnimationIndex"/>
    <functioncall functionName="AnimationName"/>
    <functioncall functionName="AppInfo"/>
    <functioncall functionName="Arena"/>
    <functioncall functionName="AspectWidthOverHeight"/>
    <functioncall functionName="Assert"/>
    <functioncall functionName="AssetManager"/>
    <functioncall functionName="AtlasHeight"/>
    <functioncall functionName="AtlasWidth"/>
    <functioncall functionName="Attachments"/>
    <functioncall functionName="AttributeCount"/>
    <functioncall functionName="Attribute_Boolean"/>
    <functioncall functionName="Attribute_Float"/>
    <functioncall functionName="Attribute_Float2"/>
    <functioncall functionName="Attribute_Float3"/>
    <functioncall functionName="Attribute_Float4"/>
    <functioncall functionName="Attribute_Integer"/>
    <functioncall functionName="Attribute_Matrix4"/>
    <functioncall functionName="Attributes"/>
    <functioncall functionName="AvailableLayers"/>
    <functioncall functionName="AvailablePresentMode"/>
    <functioncall functionName="AxesUsedZone"/>
    <functioncall functionName="Axis"/>
    <functioncall functionName="Axis_1"/>
    <functioncall functionName="Axis_2"/>
    <functioncall functionName="Axis_3"/>
    <functioncall functionName="Axis_4"/>
    <functioncall functionName="Axis_5"/>
    <functioncall functionName="Axis_6"/>
    <functioncall functionName="B"/>
    <functioncall functionName="BH"/>
    <functioncall functionName="Base"/>
    <functioncall functionName="BaseOffset"/>
    <functioncall functionName="BeginInfo"/>
    <functioncall functionName="Binary"/>
    <functioncall functionName="Block"/>
    <functioncall functionName="BlockIndex"/>
    <functioncall functionName="BlockSize"/>
    <functioncall functionName="BoneCount"/>
    <functioncall functionName="BoneInfoSize"/>
    <functioncall functionName="BooleanVar"/>
    <functioncall functionName="Bootstrap"/>
    <functioncall functionName="BootstrapPushSize_"/>
    <functioncall functionName="Bottom"/>
    <functioncall functionName="Brightness"/>
    <functioncall functionName="Buff"/>
    <functioncall functionName="Buffer"/>
    <functioncall functionName="BufferCount"/>
    <functioncall functionName="BufferData"/>
    <functioncall functionName="BufferHandle"/>
    <functioncall functionName="BufferIndex"/>
    <functioncall functionName="Button"/>
    <functioncall functionName="C"/>
    <functioncall functionName="Callback"/>
    <functioncall functionName="CallbackFrame"/>
    <functioncall functionName="CallbackIndex"/>
    <functioncall functionName="CallbackInfoCount"/>
    <functioncall functionName="CallbackType"/>
    <functioncall functionName="Capabilities"/>
    <functioncall functionName="Ceil"/>
    <functioncall functionName="ChangedNode"/>
    <functioncall functionName="CharIndex"/>
    <functioncall functionName="Character"/>
    <functioncall functionName="CharacterCallback"/>
    <functioncall functionName="CheckDeviceExtensionSupport"/>
    <functioncall functionName="CheckDirty"/>
    <functioncall functionName="CheckValidationLayerSupport"/>
    <functioncall functionName="ChooseSwapExtent"/>
    <functioncall functionName="ChooseSwapPresentMode"/>
    <functioncall functionName="ChooseSwapSurfaceFormat"/>
    <functioncall functionName="Clamp"/>
    <functioncall functionName="CleanupSound"/>
    <functioncall functionName="Clear"/>
    <functioncall functionName="ClearColor"/>
    <functioncall functionName="ClearTempMemory"/>
    <functioncall functionName="CloseLog"/>
    <functioncall functionName="CloseWindow"/>
    <functioncall functionName="CmpInt"/>
    <functioncall functionName="Codepoint"/>
    <functioncall functionName="Collision"/>
    <functioncall functionName="Color"/>
    <functioncall functionName="ColorAttachment"/>
    <functioncall functionName="ColorAttachmentRef"/>
    <functioncall functionName="ColorBlendAttachment"/>
    <functioncall functionName="ColorBlending"/>
    <functioncall functionName="Command"/>
    <functioncall functionName="CommandBufferCount"/>
    <functioncall functionName="CommandBuffers"/>
    <functioncall functionName="CommandCount"/>
    <functioncall functionName="CommandPool"/>
    <functioncall functionName="Commands"/>
    <functioncall functionName="CompareString"/>
    <functioncall functionName="Concat"/>
    <functioncall functionName="ConcatStr"/>
    <functioncall functionName="ConcatedFragmentShaderString"/>
    <functioncall functionName="ConcatedVertexShaderString"/>
    <functioncall functionName="ConditionCount"/>
    <functioncall functionName="ConditionIndex"/>
    <functioncall functionName="ConditionsMet"/>
    <functioncall functionName="ConfigData"/>
    <functioncall functionName="Constant"/>
    <functioncall functionName="Contrast"/>
    <functioncall functionName="Controller"/>
    <functioncall functionName="ControllerDeadzone"/>
    <functioncall functionName="ControllerKeyCallback"/>
    <functioncall functionName="ControllerKeys"/>
    <functioncall functionName="ControllerMappings"/>
    <functioncall functionName="ControllerPresent"/>
    <functioncall functionName="ControllerType"/>
    <functioncall functionName="Controller_None"/>
    <functioncall functionName="Controller_PS4"/>
    <functioncall functionName="Controller_Xbox"/>
    <functioncall functionName="Coords"/>
    <functioncall functionName="CopyFile"/>
    <functioncall functionName="Cos"/>
    <functioncall functionName="Cosom"/>
    <functioncall functionName="Count"/>
    <functioncall functionName="CreateCommandBuffers"/>
    <functioncall functionName="CreateCommandPool"/>
    <functioncall functionName="CreateDebugReportCallbackEXT"/>
    <functioncall functionName="CreateDeviceQueue"/>
    <functioncall functionName="CreateFile"/>
    <functioncall functionName="CreateFramebuffers"/>
    <functioncall functionName="CreateGraphicsPipeline"/>
    <functioncall functionName="CreateInfo"/>
    <functioncall functionName="CreateOpenGLWindow"/>
    <functioncall functionName="CreateRenderPass"/>
    <functioncall functionName="CreateSemaphores"/>
    <functioncall functionName="CreateShaderModule"/>
    <functioncall functionName="CreateSwapchain"/>
    <functioncall functionName="CreateSwapchainImageViews"/>
    <functioncall functionName="Cross"/>
    <functioncall functionName="CubeIndexBuffer"/>
    <functioncall functionName="CurrentBlock"/>
    <functioncall functionName="CurrentCameraHandle"/>
    <functioncall functionName="CurrentExtraShader"/>
    <functioncall functionName="CurrentFrame"/>
    <functioncall functionName="CurrentFrameIndex"/>
    <functioncall functionName="CurrentNode"/>
    <functioncall functionName="CurrentTime"/>
    <functioncall functionName="CursorPositionCallback"/>
    <functioncall functionName="CustomKey"/>
    <functioncall functionName="CutOff"/>
    <functioncall functionName="D"/>
    <functioncall functionName="DB_Float"/>
    <functioncall functionName="DB_Int"/>
    <functioncall functionName="DB_U64"/>
    <functioncall functionName="DX"/>
    <functioncall functionName="DY"/>
    <functioncall functionName="Data"/>
    <functioncall functionName="DeallocateMemory"/>
    <functioncall functionName="DebugArena"/>
    <functioncall functionName="DebugAttrib"/>
    <functioncall functionName="DebugAttribArray"/>
    <functioncall functionName="DebugCallback"/>
    <functioncall functionName="DebugCreateInfo"/>
    <functioncall functionName="DebugValue"/>
    <functioncall functionName="DefaultBootstrapParams"/>
    <functioncall functionName="DefaultFlags"/>
    <functioncall functionName="DefaultPushParams"/>
    <functioncall functionName="Delim"/>
    <functioncall functionName="DeltaTime"/>
    <functioncall functionName="Dependency"/>
    <functioncall functionName="DepthBuffer"/>
    <functioncall functionName="Description"/>
    <functioncall functionName="Destination"/>
    <functioncall functionName="DestinationNode"/>
    <functioncall functionName="DestinationNodeHandle"/>
    <functioncall functionName="DestroyDebugReportCallbackEXT"/>
    <functioncall functionName="Det"/>
    <functioncall functionName="Determinant"/>
    <functioncall functionName="Device"/>
    <functioncall functionName="DeviceCount"/>
    <functioncall functionName="DeviceCreateInfo"/>
    <functioncall functionName="DeviceExtensions"/>
    <functioncall functionName="DeviceFeatures"/>
    <functioncall functionName="DeviceProperties"/>
    <functioncall functionName="Devices"/>
    <functioncall functionName="DirectionalLightData"/>
    <functioncall functionName="DirectionalLightUBO"/>
    <functioncall functionName="DirectoryData"/>
    <functioncall functionName="DirectoryPath"/>
    <functioncall functionName="Dot"/>
    <functioncall functionName="DotP"/>
    <functioncall functionName="DpiScale"/>
    <functioncall functionName="DrawFrame"/>
    <functioncall functionName="Dst"/>
    <functioncall functionName="Duration"/>
    <functioncall functionName="E"/>
    <functioncall functionName="EXIT_FAILURE"/>
    <functioncall functionName="EXIT_SUCCESS"/>
    <functioncall functionName="EnableValidationLayers"/>
    <functioncall functionName="Epsilon"/>
    <functioncall functionName="Err"/>
    <functioncall functionName="Error"/>
    <functioncall functionName="ErrorCallback"/>
    <functioncall functionName="ErrorLog"/>
    <functioncall functionName="ExistingHandle"/>
    <functioncall functionName="Exists"/>
    <functioncall functionName="ExitGame"/>
    <functioncall functionName="ExpectedValue"/>
    <functioncall functionName="Extension"/>
    <functioncall functionName="ExtensionCount"/>
    <functioncall functionName="ExtensionProperties"/>
    <functioncall functionName="Extensions"/>
    <functioncall functionName="ExtensionsSupported"/>
    <functioncall functionName="Extent"/>
    <functioncall functionName="ExtraShaderIndex"/>
    <functioncall functionName="F"/>
    <functioncall functionName="FDFlags"/>
    <functioncall functionName="FILE_ATTRIBUTE_NORMAL"/>
    <functioncall functionName="FMODError"/>
    <functioncall functionName="FMODMode"/>
    <functioncall functionName="FMOD_ChannelGroup_SetMute"/>
    <functioncall functionName="FMOD_ChannelGroup_SetPaused"/>
    <functioncall functionName="FMOD_ChannelGroup_SetVolume"/>
    <functioncall functionName="FMOD_ChannelGroup_Stop"/>
    <functioncall functionName="FMOD_Channel_GetVolume"/>
    <functioncall functionName="FMOD_Channel_SetLoopCount"/>
    <functioncall functionName="FMOD_Channel_SetMode"/>
    <functioncall functionName="FMOD_Channel_SetPaused"/>
    <functioncall functionName="FMOD_Channel_SetPitch"/>
    <functioncall functionName="FMOD_Channel_SetVolume"/>
    <functioncall functionName="FMOD_DEFAULT"/>
    <functioncall functionName="FMOD_ErrorString"/>
    <functioncall functionName="FMOD_INIT_NORMAL"/>
    <functioncall functionName="FMOD_LOOP_NORMAL"/>
    <functioncall functionName="FMOD_LOOP_OFF"/>
    <functioncall functionName="FMOD_MODE"/>
    <functioncall functionName="FMOD_System_Create"/>
    <functioncall functionName="FMOD_System_CreateSound"/>
    <functioncall functionName="FMOD_System_GetMasterChannelGroup"/>
    <functioncall functionName="FMOD_System_GetVersion"/>
    <functioncall functionName="FMOD_System_Init"/>
    <functioncall functionName="FMOD_System_PlaySound"/>
    <functioncall functionName="FMOD_System_Release"/>
    <functioncall functionName="FMOD_System_Update"/>
    <functioncall functionName="FPS"/>
    <functioncall functionName="FTLibrary"/>
    <functioncall functionName="FT_Init_FreeType"/>
    <functioncall functionName="FT_LOAD_RENDER"/>
    <functioncall functionName="FT_Load_Char"/>
    <functioncall functionName="FT_New_Face"/>
    <functioncall functionName="FT_Select_Charmap"/>
    <functioncall functionName="FT_Set_Pixel_Sizes"/>
    <functioncall functionName="FT_UInt"/>
    <functioncall functionName="FT_ULong"/>
    <functioncall functionName="Face"/>
    <functioncall functionName="Fading_In"/>
    <functioncall functionName="Fading_None"/>
    <functioncall functionName="Fading_Out"/>
    <functioncall functionName="Fading_OutIn"/>
    <functioncall functionName="FamilyIndex"/>
    <functioncall functionName="Far"/>
    <functioncall functionName="File"/>
    <functioncall functionName="FileHandle"/>
    <functioncall functionName="FileIndex"/>
    <functioncall functionName="FileName"/>
    <functioncall functionName="FilePath"/>
    <functioncall functionName="FileTimeToTimeT"/>
    <functioncall functionName="FilesLength"/>
    <functioncall functionName="FindClose"/>
    <functioncall functionName="FindData"/>
    <functioncall functionName="FindFile"/>
    <functioncall functionName="FindFirstFile"/>
    <functioncall functionName="FindFirstFileA"/>
    <functioncall functionName="FindHandle"/>
    <functioncall functionName="FindNextFile"/>
    <functioncall functionName="FindQueueFamilies"/>
    <functioncall functionName="Flags"/>
    <functioncall functionName="Flipped"/>
    <functioncall functionName="Float2Var"/>
    <functioncall functionName="Float3Var"/>
    <functioncall functionName="Float4Var"/>
    <functioncall functionName="FloatVar"/>
    <functioncall functionName="Floor"/>
    <functioncall functionName="FocalLength"/>
    <functioncall functionName="Font"/>
    <functioncall functionName="FontCount"/>
    <functioncall functionName="FontHandle"/>
    <functioncall functionName="FontPath"/>
    <functioncall functionName="FontSize"/>
    <functioncall functionName="ForAnimation"/>
    <functioncall functionName="ForLeftDirection"/>
    <functioncall functionName="ForUpDirection"/>
    <functioncall functionName="Format"/>
    <functioncall functionName="FormatCount"/>
    <functioncall functionName="FormatIndex"/>
    <functioncall functionName="Formats"/>
    <functioncall functionName="Forward"/>
    <functioncall functionName="FragmentPath"/>
    <functioncall functionName="FragmentShader"/>
    <functioncall functionName="FragmentShaderContent"/>
    <functioncall functionName="FragmentShaderModule"/>
    <functioncall functionName="FragmentShaderStageInfo"/>
    <functioncall functionName="FragmentString"/>
    <functioncall functionName="FragmentText"/>
    <functioncall functionName="FrameBuffer"/>
    <functioncall functionName="FrameBufferHeight"/>
    <functioncall functionName="FrameBufferShader"/>
    <functioncall functionName="FrameBufferTex0Loc"/>
    <functioncall functionName="FrameBufferTex1Loc"/>
    <functioncall functionName="FrameBufferVAO"/>
    <functioncall functionName="FrameBufferVBO"/>
    <functioncall functionName="FrameBufferVertices"/>
    <functioncall functionName="FrameBufferWidth"/>
    <functioncall functionName="FrameLock"/>
    <functioncall functionName="FrameSize"/>
    <functioncall functionName="FramebufferInfo"/>
    <functioncall functionName="FramebufferSizeCallback"/>
    <functioncall functionName="Free"/>
    <functioncall functionName="FreeDynamicLibrary"/>
    <functioncall functionName="FreeLastBlock"/>
    <functioncall functionName="FreeLibrary"/>
    <functioncall functionName="From"/>
    <functioncall functionName="Fullscreen"/>
    <functioncall functionName="Func"/>
    <functioncall functionName="GENERIC_READ"/>
    <functioncall functionName="GENERIC_WRITE"/>
    <functioncall functionName="GLADloadproc"/>
    <functioncall functionName="GLDEBUGPROC"/>
    <functioncall functionName="GLFW_BLUE_BITS"/>
    <functioncall functionName="GLFW_CLIENT_API"/>
    <functioncall functionName="GLFW_CONTEXT_VERSION_MAJOR"/>
    <functioncall functionName="GLFW_CONTEXT_VERSION_MINOR"/>
    <functioncall functionName="GLFW_CURSOR"/>
    <functioncall functionName="GLFW_CURSOR_HIDDEN"/>
    <functioncall functionName="GLFW_CURSOR_NORMAL"/>
    <functioncall functionName="GLFW_FALSE"/>
    <functioncall functionName="GLFW_GREEN_BITS"/>
    <functioncall functionName="GLFW_JOYSTICK_1"/>
    <functioncall functionName="GLFW_JOYSTICK_10"/>
    <functioncall functionName="GLFW_JOYSTICK_11"/>
    <functioncall functionName="GLFW_JOYSTICK_12"/>
    <functioncall functionName="GLFW_JOYSTICK_13"/>
    <functioncall functionName="GLFW_JOYSTICK_14"/>
    <functioncall functionName="GLFW_JOYSTICK_15"/>
    <functioncall functionName="GLFW_JOYSTICK_16"/>
    <functioncall functionName="GLFW_JOYSTICK_2"/>
    <functioncall functionName="GLFW_JOYSTICK_3"/>
    <functioncall functionName="GLFW_JOYSTICK_4"/>
    <functioncall functionName="GLFW_JOYSTICK_5"/>
    <functioncall functionName="GLFW_JOYSTICK_6"/>
    <functioncall functionName="GLFW_JOYSTICK_7"/>
    <functioncall functionName="GLFW_JOYSTICK_8"/>
    <functioncall functionName="GLFW_JOYSTICK_9"/>
    <functioncall functionName="GLFW_KEY_0"/>
    <functioncall functionName="GLFW_KEY_1"/>
    <functioncall functionName="GLFW_KEY_2"/>
    <functioncall functionName="GLFW_KEY_3"/>
    <functioncall functionName="GLFW_KEY_4"/>
    <functioncall functionName="GLFW_KEY_5"/>
    <functioncall functionName="GLFW_KEY_6"/>
    <functioncall functionName="GLFW_KEY_7"/>
    <functioncall functionName="GLFW_KEY_8"/>
    <functioncall functionName="GLFW_KEY_9"/>
    <functioncall functionName="GLFW_KEY_A"/>
    <functioncall functionName="GLFW_KEY_APOSTROPHE"/>
    <functioncall functionName="GLFW_KEY_B"/>
    <functioncall functionName="GLFW_KEY_BACKSLASH"/>
    <functioncall functionName="GLFW_KEY_BACKSPACE"/>
    <functioncall functionName="GLFW_KEY_C"/>
    <functioncall functionName="GLFW_KEY_CAPS_LOCK"/>
    <functioncall functionName="GLFW_KEY_COMMA"/>
    <functioncall functionName="GLFW_KEY_D"/>
    <functioncall functionName="GLFW_KEY_DELETE"/>
    <functioncall functionName="GLFW_KEY_DOWN"/>
    <functioncall functionName="GLFW_KEY_E"/>
    <functioncall functionName="GLFW_KEY_END"/>
    <functioncall functionName="GLFW_KEY_ENTER"/>
    <functioncall functionName="GLFW_KEY_EQUAL"/>
    <functioncall functionName="GLFW_KEY_ESCAPE"/>
    <functioncall functionName="GLFW_KEY_F"/>
    <functioncall functionName="GLFW_KEY_F1"/>
    <functioncall functionName="GLFW_KEY_F10"/>
    <functioncall functionName="GLFW_KEY_F11"/>
    <functioncall functionName="GLFW_KEY_F12"/>
    <functioncall functionName="GLFW_KEY_F13"/>
    <functioncall functionName="GLFW_KEY_F14"/>
    <functioncall functionName="GLFW_KEY_F15"/>
    <functioncall functionName="GLFW_KEY_F16"/>
    <functioncall functionName="GLFW_KEY_F17"/>
    <functioncall functionName="GLFW_KEY_F18"/>
    <functioncall functionName="GLFW_KEY_F19"/>
    <functioncall functionName="GLFW_KEY_F2"/>
    <functioncall functionName="GLFW_KEY_F20"/>
    <functioncall functionName="GLFW_KEY_F21"/>
    <functioncall functionName="GLFW_KEY_F22"/>
    <functioncall functionName="GLFW_KEY_F23"/>
    <functioncall functionName="GLFW_KEY_F24"/>
    <functioncall functionName="GLFW_KEY_F25"/>
    <functioncall functionName="GLFW_KEY_F3"/>
    <functioncall functionName="GLFW_KEY_F4"/>
    <functioncall functionName="GLFW_KEY_F5"/>
    <functioncall functionName="GLFW_KEY_F6"/>
    <functioncall functionName="GLFW_KEY_F7"/>
    <functioncall functionName="GLFW_KEY_F8"/>
    <functioncall functionName="GLFW_KEY_F9"/>
    <functioncall functionName="GLFW_KEY_G"/>
    <functioncall functionName="GLFW_KEY_GRAVE_ACCENT"/>
    <functioncall functionName="GLFW_KEY_H"/>
    <functioncall functionName="GLFW_KEY_HOME"/>
    <functioncall functionName="GLFW_KEY_I"/>
    <functioncall functionName="GLFW_KEY_INSERT"/>
    <functioncall functionName="GLFW_KEY_J"/>
    <functioncall functionName="GLFW_KEY_K"/>
    <functioncall functionName="GLFW_KEY_KP_0"/>
    <functioncall functionName="GLFW_KEY_KP_1"/>
    <functioncall functionName="GLFW_KEY_KP_2"/>
    <functioncall functionName="GLFW_KEY_KP_3"/>
    <functioncall functionName="GLFW_KEY_KP_4"/>
    <functioncall functionName="GLFW_KEY_KP_5"/>
    <functioncall functionName="GLFW_KEY_KP_6"/>
    <functioncall functionName="GLFW_KEY_KP_7"/>
    <functioncall functionName="GLFW_KEY_KP_8"/>
    <functioncall functionName="GLFW_KEY_KP_9"/>
    <functioncall functionName="GLFW_KEY_KP_ADD"/>
    <functioncall functionName="GLFW_KEY_KP_DECIMAL"/>
    <functioncall functionName="GLFW_KEY_KP_DIVIDE"/>
    <functioncall functionName="GLFW_KEY_KP_ENTER"/>
    <functioncall functionName="GLFW_KEY_KP_EQUAL"/>
    <functioncall functionName="GLFW_KEY_KP_MULTIPLY"/>
    <functioncall functionName="GLFW_KEY_KP_SUBTRACT"/>
    <functioncall functionName="GLFW_KEY_L"/>
    <functioncall functionName="GLFW_KEY_LAST"/>
    <functioncall functionName="GLFW_KEY_LEFT"/>
    <functioncall functionName="GLFW_KEY_LEFT_ALT"/>
    <functioncall functionName="GLFW_KEY_LEFT_BRACKET"/>
    <functioncall functionName="GLFW_KEY_LEFT_CONTROL"/>
    <functioncall functionName="GLFW_KEY_LEFT_SHIFT"/>
    <functioncall functionName="GLFW_KEY_LEFT_SUPER"/>
    <functioncall functionName="GLFW_KEY_M"/>
    <functioncall functionName="GLFW_KEY_MENU"/>
    <functioncall functionName="GLFW_KEY_MINUS"/>
    <functioncall functionName="GLFW_KEY_N"/>
    <functioncall functionName="GLFW_KEY_NUM_LOCK"/>
    <functioncall functionName="GLFW_KEY_O"/>
    <functioncall functionName="GLFW_KEY_P"/>
    <functioncall functionName="GLFW_KEY_PAGE_DOWN"/>
    <functioncall functionName="GLFW_KEY_PAGE_UP"/>
    <functioncall functionName="GLFW_KEY_PAUSE"/>
    <functioncall functionName="GLFW_KEY_PERIOD"/>
    <functioncall functionName="GLFW_KEY_PRINT_SCREEN"/>
    <functioncall functionName="GLFW_KEY_Q"/>
    <functioncall functionName="GLFW_KEY_R"/>
    <functioncall functionName="GLFW_KEY_RIGHT"/>
    <functioncall functionName="GLFW_KEY_RIGHT_ALT"/>
    <functioncall functionName="GLFW_KEY_RIGHT_BRACKET"/>
    <functioncall functionName="GLFW_KEY_RIGHT_CONTROL"/>
    <functioncall functionName="GLFW_KEY_RIGHT_SHIFT"/>
    <functioncall functionName="GLFW_KEY_RIGHT_SUPER"/>
    <functioncall functionName="GLFW_KEY_S"/>
    <functioncall functionName="GLFW_KEY_SCROLL_LOCK"/>
    <functioncall functionName="GLFW_KEY_SEMICOLON"/>
    <functioncall functionName="GLFW_KEY_SLASH"/>
    <functioncall functionName="GLFW_KEY_SPACE"/>
    <functioncall functionName="GLFW_KEY_T"/>
    <functioncall functionName="GLFW_KEY_TAB"/>
    <functioncall functionName="GLFW_KEY_U"/>
    <functioncall functionName="GLFW_KEY_UP"/>
    <functioncall functionName="GLFW_KEY_V"/>
    <functioncall functionName="GLFW_KEY_W"/>
    <functioncall functionName="GLFW_KEY_WORLD_1"/>
    <functioncall functionName="GLFW_KEY_WORLD_2"/>
    <functioncall functionName="GLFW_KEY_X"/>
    <functioncall functionName="GLFW_KEY_Y"/>
    <functioncall functionName="GLFW_KEY_Z"/>
    <functioncall functionName="GLFW_MOUSE_BUTTON_LEFT"/>
    <functioncall functionName="GLFW_MOUSE_BUTTON_MIDDLE"/>
    <functioncall functionName="GLFW_MOUSE_BUTTON_RIGHT"/>
    <functioncall functionName="GLFW_NO_API"/>
    <functioncall functionName="GLFW_OPENGL_CORE_PROFILE"/>
    <functioncall functionName="GLFW_OPENGL_FORWARD_COMPAT"/>
    <functioncall functionName="GLFW_OPENGL_PROFILE"/>
    <functioncall functionName="GLFW_RED_BITS"/>
    <functioncall functionName="GLFW_REFRESH_RATE"/>
    <functioncall functionName="GLFW_RESIZABLE"/>
    <functioncall functionName="GLFW_TRUE"/>
    <functioncall functionName="GL_ARRAY_BUFFER"/>
    <functioncall functionName="GL_BLEND"/>
    <functioncall functionName="GL_CLAMP_TO_EDGE"/>
    <functioncall functionName="GL_COLOR_ATTACHMENT0"/>
    <functioncall functionName="GL_COMPILE_STATUS"/>
    <functioncall functionName="GL_CULL_FACE"/>
    <functioncall functionName="GL_DEBUG_OUTPUT"/>
    <functioncall functionName="GL_DEPTH_ATTACHMENT"/>
    <functioncall functionName="GL_DEPTH_BUFFER_BIT"/>
    <functioncall functionName="GL_DEPTH_COMPONENT"/>
    <functioncall functionName="GL_DEPTH_TEST"/>
    <functioncall functionName="GL_DITHER"/>
    <functioncall functionName="GL_DYNAMIC_DRAW"/>
    <functioncall functionName="GL_ELEMENT_ARRAY_BUFFER"/>
    <functioncall functionName="GL_FALSE"/>
    <functioncall functionName="GL_FLOAT"/>
    <functioncall functionName="GL_FRAGMENT_SHADER"/>
    <functioncall functionName="GL_FRAMEBUFFER"/>
    <functioncall functionName="GL_INFO_LOG_LENGTH"/>
    <functioncall functionName="GL_LESS"/>
    <functioncall functionName="GL_LINEAR"/>
    <functioncall functionName="GL_LINES"/>
    <functioncall functionName="GL_LINE_LOOP"/>
    <functioncall functionName="GL_LINE_SMOOTH"/>
    <functioncall functionName="GL_NEAREST"/>
    <functioncall functionName="GL_ONE_MINUS_SRC_ALPHA"/>
    <functioncall functionName="GL_R8"/>
    <functioncall functionName="GL_RED"/>
    <functioncall functionName="GL_RENDERBUFFER"/>
    <functioncall functionName="GL_REPEAT"/>
    <functioncall functionName="GL_RGB"/>
    <functioncall functionName="GL_RGBA"/>
    <functioncall functionName="GL_SHADING_LANGUAGE_VERSION"/>
    <functioncall functionName="GL_SRC_ALPHA"/>
    <functioncall functionName="GL_STATIC_DRAW"/>
    <functioncall functionName="GL_TEXTURE0"/>
    <functioncall functionName="GL_TEXTURE1"/>
    <functioncall functionName="GL_TEXTURE_2D"/>
    <functioncall functionName="GL_TEXTURE_MAG_FILTER"/>
    <functioncall functionName="GL_TEXTURE_MIN_FILTER"/>
    <functioncall functionName="GL_TEXTURE_WRAP_S"/>
    <functioncall functionName="GL_TEXTURE_WRAP_T"/>
    <functioncall functionName="GL_TRIANGLES"/>
    <functioncall functionName="GL_TRUE"/>
    <functioncall functionName="GL_UNIFORM_BUFFER"/>
    <functioncall functionName="GL_UNPACK_ALIGNMENT"/>
    <functioncall functionName="GL_UNSIGNED_BYTE"/>
    <functioncall functionName="GL_UNSIGNED_INT"/>
    <functioncall functionName="GL_VERSION"/>
    <functioncall functionName="GL_VERTEX_SHADER"/>
    <functioncall functionName="GL_VIEWPORT"/>
    <functioncall functionName="GL_WRITE_ONLY"/>
    <functioncall functionName="GLfloat"/>
    <functioncall functionName="GLint"/>
    <functioncall functionName="GLsizei"/>
    <functioncall functionName="GLsizeiptr"/>
    <functioncall functionName="GLuint"/>
    <functioncall functionName="Game"/>
    <functioncall functionName="GameCode"/>
    <functioncall functionName="GameCodeLibrary"/>
    <functioncall functionName="GameLibraryPath"/>
    <functioncall functionName="GameMemory"/>
    <functioncall functionName="GetAlignmentOffset"/>
    <functioncall functionName="GetAngleInRadians"/>
    <functioncall functionName="GetEffectiveSizeFor"/>
    <functioncall functionName="GetJoystickKey"/>
    <functioncall functionName="GetJoystickKeyDown"/>
    <functioncall functionName="GetKey"/>
    <functioncall functionName="GetKeyDown"/>
    <functioncall functionName="GetLastError"/>
    <functioncall functionName="GetLastWriteTime"/>
    <functioncall functionName="GetMouseButton"/>
    <functioncall functionName="GetMouseButtonDown"/>
    <functioncall functionName="GetOpenFileName"/>
    <functioncall functionName="GetProcAddress"/>
    <functioncall functionName="GetSaveFileName"/>
    <functioncall functionName="GetTime"/>
    <functioncall functionName="GlfwExtensionCount"/>
    <functioncall functionName="GraphicsFamily"/>
    <functioncall functionName="GraphicsPipeline"/>
    <functioncall functionName="GraphicsQueue"/>
    <functioncall functionName="Graphics_OpenGl"/>
    <functioncall functionName="Graphics_Vulkan"/>
    <functioncall functionName="H"/>
    <functioncall functionName="HANDLE"/>
    <functioncall functionName="HMODULE"/>
    <functioncall functionName="Handle"/>
    <functioncall functionName="HasData"/>
    <functioncall functionName="HasNormals"/>
    <functioncall functionName="HasUVs"/>
    <functioncall functionName="Hash"/>
    <functioncall functionName="HashInt"/>
    <functioncall functionName="HashIntKeys"/>
    <functioncall functionName="HashV"/>
    <functioncall functionName="HashedKey"/>
    <functioncall functionName="HashedPairs"/>
    <functioncall functionName="Height"/>
    <functioncall functionName="Hf"/>
    <functioncall functionName="HideCursor"/>
    <functioncall functionName="I"/>
    <functioncall functionName="IBO"/>
    <functioncall functionName="Id"/>
    <functioncall functionName="Idx"/>
    <functioncall functionName="ImageAvailableSemaphore"/>
    <functioncall functionName="ImageCount"/>
    <functioncall functionName="ImageData"/>
    <functioncall functionName="ImageIndex"/>
    <functioncall functionName="In"/>
    <functioncall functionName="Index"/>
    <functioncall functionName="IndexBuffer"/>
    <functioncall functionName="IndexBufferCount"/>
    <functioncall functionName="IndexBufferSize"/>
    <functioncall functionName="Indices"/>
    <functioncall functionName="InitAudio_FMOD"/>
    <functioncall functionName="InitControllerMappings"/>
    <functioncall functionName="InitKeyMappings"/>
    <functioncall functionName="InitKeys"/>
    <functioncall functionName="InitLog"/>
    <functioncall functionName="InitMouseButtonMappings"/>
    <functioncall functionName="InitPlatform"/>
    <functioncall functionName="InitSize"/>
    <functioncall functionName="InitialValue"/>
    <functioncall functionName="InitializeFreeTypeFont"/>
    <functioncall functionName="InitializeOpenGL"/>
    <functioncall functionName="InitializeVulkan"/>
    <functioncall functionName="Initialized"/>
    <functioncall functionName="Inner"/>
    <functioncall functionName="InputAssembly"/>
    <functioncall functionName="InputController"/>
    <functioncall functionName="Instance"/>
    <functioncall functionName="IntegerVar"/>
    <functioncall functionName="Inverse"/>
    <functioncall functionName="IsCompiled"/>
    <functioncall functionName="IsDeviceSuitable"/>
    <functioncall functionName="IsInitialized"/>
    <functioncall functionName="IsQueueFamilyComplete"/>
    <functioncall functionName="IsUI"/>
    <functioncall functionName="IsValid"/>
    <functioncall functionName="IsometricQuadVBO"/>
    <functioncall functionName="IsometricQuadVertices"/>
    <functioncall functionName="IsometricVAO"/>
    <functioncall functionName="Joystick"/>
    <functioncall functionName="K"/>
    <functioncall functionName="Key"/>
    <functioncall functionName="KeyCallback"/>
    <functioncall functionName="KeyCode"/>
    <functioncall functionName="KeyCount"/>
    <functioncall functionName="KeyMappings"/>
    <functioncall functionName="Key_Invalid"/>
    <functioncall functionName="Key_JustPressed"/>
    <functioncall functionName="Key_NotPressed"/>
    <functioncall functionName="KeyboardKey"/>
    <functioncall functionName="L"/>
    <functioncall functionName="LFlag_File"/>
    <functioncall functionName="LPSECURITY_ATTRIBUTES"/>
    <functioncall functionName="LastFrame"/>
    <functioncall functionName="LastLibraryWriteTime"/>
    <functioncall functionName="LastWriteTime"/>
    <functioncall functionName="LayerCount"/>
    <functioncall functionName="LayerFound"/>
    <functioncall functionName="LayerPropIndex"/>
    <functioncall functionName="Left"/>
    <functioncall functionName="Length"/>
    <functioncall functionName="Lerp"/>
    <functioncall functionName="LibPath"/>
    <functioncall functionName="Library"/>
    <functioncall functionName="LightCommandCount"/>
    <functioncall functionName="LightCommands"/>
    <functioncall functionName="LightSourceShader"/>
    <functioncall functionName="LightingFrameBuffer"/>
    <functioncall functionName="LightingTextureColorBuffer"/>
    <functioncall functionName="LineBuffer"/>
    <functioncall functionName="LineEBO"/>
    <functioncall functionName="LineIndices"/>
    <functioncall functionName="LineNum"/>
    <functioncall functionName="LineShader"/>
    <functioncall functionName="LineVAO"/>
    <functioncall functionName="LineVBO"/>
    <functioncall functionName="LineWidth"/>
    <functioncall functionName="Linear"/>
    <functioncall functionName="Link"/>
    <functioncall functionName="LinkCount"/>
    <functioncall functionName="LinkIndex"/>
    <functioncall functionName="LinuxAllocateMemory"/>
    <functioncall functionName="LinuxDeallocateMemory"/>
    <functioncall functionName="LinuxFileExists"/>
    <functioncall functionName="LinuxFreeLibrary"/>
    <functioncall functionName="LinuxLoadLibrary"/>
    <functioncall functionName="LinuxLoadSymbol"/>
    <functioncall functionName="ListenForChanges"/>
    <functioncall functionName="ListenToFileChanges"/>
    <functioncall functionName="LoadConfig"/>
    <functioncall functionName="LoadDynamicLibrary"/>
    <functioncall functionName="LoadExtraShader"/>
    <functioncall functionName="LoadExtraShaders"/>
    <functioncall functionName="LoadFont"/>
    <functioncall functionName="LoadFragmentShader"/>
    <functioncall functionName="LoadGameCode"/>
    <functioncall functionName="LoadLibraryA"/>
    <functioncall functionName="LoadShader"/>
    <functioncall functionName="LoadShaderFromFile"/>
    <functioncall functionName="LoadSound"/>
    <functioncall functionName="LoadSounds"/>
    <functioncall functionName="LoadSymbol"/>
    <functioncall functionName="LoadTexture"/>
    <functioncall functionName="LoadTextures"/>
    <functioncall functionName="LoadVertexShader"/>
    <functioncall functionName="Loaded"/>
    <functioncall functionName="Location"/>
    <functioncall functionName="Log"/>
    <functioncall functionName="LogCount"/>
    <functioncall functionName="LogState"/>
    <functioncall functionName="Loop"/>
    <functioncall functionName="LoopCount"/>
    <functioncall functionName="M"/>
    <functioncall functionName="M11"/>
    <functioncall functionName="M12"/>
    <functioncall functionName="M13"/>
    <functioncall functionName="M14"/>
    <functioncall functionName="M21"/>
    <functioncall functionName="M22"/>
    <functioncall functionName="M23"/>
    <functioncall functionName="M24"/>
    <functioncall functionName="M31"/>
    <functioncall functionName="M32"/>
    <functioncall functionName="M33"/>
    <functioncall functionName="M34"/>
    <functioncall functionName="M41"/>
    <functioncall functionName="M42"/>
    <functioncall functionName="M43"/>
    <functioncall functionName="M44"/>
    <functioncall functionName="MEM_COMMIT"/>
    <functioncall functionName="MEM_RELEASE"/>
    <functioncall functionName="MX"/>
    <functioncall functionName="MY"/>
    <functioncall functionName="Magnitude"/>
    <functioncall functionName="MasterGroup"/>
    <functioncall functionName="MaterialIndex"/>
    <functioncall functionName="Matrix4Var"/>
    <functioncall functionName="MaxLength"/>
    <functioncall functionName="Maximum"/>
    <functioncall functionName="MeasureText"/>
    <functioncall functionName="MeshCount"/>
    <functioncall functionName="MeshIndex"/>
    <functioncall functionName="Message"/>
    <functioncall functionName="MessageCallback"/>
    <functioncall functionName="Minimum"/>
    <functioncall functionName="MinimumBlockSize"/>
    <functioncall functionName="Mode"/>
    <functioncall functionName="Model"/>
    <functioncall functionName="Model_Skinned"/>
    <functioncall functionName="Model_Static"/>
    <functioncall functionName="Monitor"/>
    <functioncall functionName="Mouse"/>
    <functioncall functionName="MouseButtonCallback"/>
    <functioncall functionName="MouseButtonMappings"/>
    <functioncall functionName="Msg"/>
    <functioncall functionName="Multisampling"/>
    <functioncall functionName="MusicVolume"/>
    <functioncall functionName="Muted"/>
    <functioncall functionName="N"/>
    <functioncall functionName="NULL"/>
    <functioncall functionName="Name"/>
    <functioncall functionName="Near"/>
    <functioncall functionName="NewBlock"/>
    <functioncall functionName="NewChannel"/>
    <functioncall functionName="NewHash"/>
    <functioncall functionName="Node"/>
    <functioncall functionName="NodeCount"/>
    <functioncall functionName="NodeHandle"/>
    <functioncall functionName="NodeIndex"/>
    <functioncall functionName="NodeName"/>
    <functioncall functionName="NormalMatrix"/>
    <functioncall functionName="NormalQuadVBO"/>
    <functioncall functionName="NormalQuadVertices"/>
    <functioncall functionName="NormalQuadVerticesSize"/>
    <functioncall functionName="Normalize"/>
    <functioncall functionName="Not_Found"/>
    <functioncall functionName="OFN_NOCHANGEDIR"/>
    <functioncall functionName="OFlags"/>
    <functioncall functionName="OPEN_ALWAYS"/>
    <functioncall functionName="OSXAllocateMemory"/>
    <functioncall functionName="OSXDeallocateMemory"/>
    <functioncall functionName="OSXFreeLibrary"/>
    <functioncall functionName="OSXLoadLibrary"/>
    <functioncall functionName="OSXLoadSymbol"/>
    <functioncall functionName="OffsetToArena"/>
    <functioncall functionName="Ofn"/>
    <functioncall functionName="OldProtect"/>
    <functioncall functionName="Omega"/>
    <functioncall functionName="On"/>
    <functioncall functionName="Orientation"/>
    <functioncall functionName="Origin"/>
    <functioncall functionName="OriginNodeHandle"/>
    <functioncall functionName="Out"/>
    <functioncall functionName="Outer"/>
    <functioncall functionName="OuterCutOff"/>
    <functioncall functionName="P"/>
    <functioncall functionName="PAGE_NOACCESS"/>
    <functioncall functionName="PAGE_READWRITE"/>
    <functioncall functionName="PFN_vkCreateDebugReportCallbackEXT"/>
    <functioncall functionName="PFN_vkDestroyDebugReportCallbackEXT"/>
    <functioncall functionName="PM_OverflowCheck"/>
    <functioncall functionName="PM_Temporary"/>
    <functioncall functionName="PM_UnderflowCheck"/>
    <functioncall functionName="PS4Key"/>
    <functioncall functionName="PageSize"/>
    <functioncall functionName="Parameter"/>
    <functioncall functionName="ParameterCount"/>
    <functioncall functionName="ParameterHandle"/>
    <functioncall functionName="ParameterIndex"/>
    <functioncall functionName="ParameterName"/>
    <functioncall functionName="Params"/>
    <functioncall functionName="PassthroughShader"/>
    <functioncall functionName="PassthroughVAO"/>
    <functioncall functionName="Path"/>
    <functioncall functionName="Paused"/>
    <functioncall functionName="PermArena"/>
    <functioncall functionName="PhysicalDevice"/>
    <functioncall functionName="PipelineInfo"/>
    <functioncall functionName="PipelineLayout"/>
    <functioncall functionName="PipelineLayoutInfo"/>
    <functioncall functionName="Pitch"/>
    <functioncall functionName="PixelsPerUnit"/>
    <functioncall functionName="PlatBlock"/>
    <functioncall functionName="PlatformAPI"/>
    <functioncall functionName="PlaySound"/>
    <functioncall functionName="PlaySounds"/>
    <functioncall functionName="Playing"/>
    <functioncall functionName="Point1"/>
    <functioncall functionName="Point2"/>
    <functioncall functionName="PointLightData"/>
    <functioncall functionName="PointLightUBO"/>
    <functioncall functionName="PollEvents"/>
    <functioncall functionName="PoolInfo"/>
    <functioncall functionName="PosLoc"/>
    <functioncall functionName="Position"/>
    <functioncall functionName="PositionLocation"/>
    <functioncall functionName="PositionLocation2"/>
    <functioncall functionName="PositionLocation3"/>
    <functioncall functionName="Pow"/>
    <functioncall functionName="Present"/>
    <functioncall functionName="PresentFamily"/>
    <functioncall functionName="PresentInfo"/>
    <functioncall functionName="PresentMode"/>
    <functioncall functionName="PresentModeCount"/>
    <functioncall functionName="PresentModeIndex"/>
    <functioncall functionName="PresentModes"/>
    <functioncall functionName="PresentQueue"/>
    <functioncall functionName="PresentSupport"/>
    <functioncall functionName="Prev"/>
    <functioncall functionName="PrimitiveVBO"/>
    <functioncall functionName="Program"/>
    <functioncall functionName="Projection"/>
    <functioncall functionName="ProjectionMatrix"/>
    <functioncall functionName="ProtectOffset"/>
    <functioncall functionName="Protected"/>
    <functioncall functionName="Pt"/>
    <functioncall functionName="Ptr"/>
    <functioncall functionName="PushSize_"/>
    <functioncall functionName="PushString"/>
    <functioncall functionName="PushTempSize_"/>
    <functioncall functionName="PushTempString"/>
    <functioncall functionName="Q"/>
    <functioncall functionName="Q0"/>
    <functioncall functionName="Q1"/>
    <functioncall functionName="Q2"/>
    <functioncall functionName="QuadIndexBuffer"/>
    <functioncall functionName="QuadIndices"/>
    <functioncall functionName="Quadratic"/>
    <functioncall functionName="QuerySwapchainSupport"/>
    <functioncall functionName="QueueCount"/>
    <functioncall functionName="QueueCreateInfos"/>
    <functioncall functionName="QueueFamilies"/>
    <functioncall functionName="QueueFamilyCount"/>
    <functioncall functionName="QueueFamilyIndices"/>
    <functioncall functionName="QueuePriority"/>
    <functioncall functionName="R"/>
    <functioncall functionName="RAND_MAX"/>
    <functioncall functionName="RTLD_LAZY"/>
    <functioncall functionName="Rasterizer"/>
    <functioncall functionName="ReachedEnd"/>
    <functioncall functionName="RectShader"/>
    <functioncall functionName="RectVAO"/>
    <functioncall functionName="RegisterBuffers"/>
    <functioncall functionName="RegisterVertexBuffer"/>
    <functioncall functionName="Rehash"/>
    <functioncall functionName="ReloadAssets"/>
    <functioncall functionName="ReloadFragmentShader"/>
    <functioncall functionName="ReloadGameCode"/>
    <functioncall functionName="ReloadLibraries"/>
    <functioncall functionName="ReloadVertexShader"/>
    <functioncall functionName="Render"/>
    <functioncall functionName="RenderBuffer"/>
    <functioncall functionName="RenderCommand_Buffer"/>
    <functioncall functionName="RenderCommand_Count"/>
    <functioncall functionName="RenderCommand_DepthTest"/>
    <functioncall functionName="RenderCommand_DirectionalLight"/>
    <functioncall functionName="RenderCommand_Line"/>
    <functioncall functionName="RenderCommand_Model"/>
    <functioncall functionName="RenderCommand_PointLight"/>
    <functioncall functionName="RenderCommand_Quad"/>
    <functioncall functionName="RenderCommand_ShaderEnd"/>
    <functioncall functionName="RenderCommand_ShaderStart"/>
    <functioncall functionName="RenderCommand_Spotlight"/>
    <functioncall functionName="RenderCommand_Sprite"/>
    <functioncall functionName="RenderCommand_Text"/>
    <functioncall functionName="RenderCommand_WireframeCube"/>
    <functioncall functionName="RenderCommands"/>
    <functioncall functionName="RenderFinishedSemaphore"/>
    <functioncall functionName="RenderFont"/>
    <functioncall functionName="RenderLine"/>
    <functioncall functionName="RenderModel"/>
    <functioncall functionName="RenderPass"/>
    <functioncall functionName="RenderPassInfo"/>
    <functioncall functionName="RenderQuad"/>
    <functioncall functionName="RenderSetup"/>
    <functioncall functionName="RenderState"/>
    <functioncall functionName="RenderText"/>
    <functioncall functionName="RenderWireframeCube"/>
    <functioncall functionName="Render_Fill"/>
    <functioncall functionName="Render_Outline"/>
    <functioncall functionName="Renderer"/>
    <functioncall functionName="RequiredIndex"/>
    <functioncall functionName="Res"/>
    <functioncall functionName="ResetCallbacks"/>
    <functioncall functionName="ResetCommands"/>
    <functioncall functionName="Result"/>
    <functioncall functionName="Right"/>
    <functioncall functionName="Rotate"/>
    <functioncall functionName="Rotation"/>
    <functioncall functionName="S"/>
    <functioncall functionName="SBuffer"/>
    <functioncall functionName="SEEK_END"/>
    <functioncall functionName="SEEK_SET"/>
    <functioncall functionName="SFXVolume"/>
    <functioncall functionName="Scale"/>
    <functioncall functionName="ScaleFromHeight"/>
    <functioncall functionName="ScaleFromWidth"/>
    <functioncall functionName="ScaleX"/>
    <functioncall functionName="ScaleY"/>
    <functioncall functionName="Scan"/>
    <functioncall functionName="ScanPairs"/>
    <functioncall functionName="Scissor"/>
    <functioncall functionName="ScreenHeight"/>
    <functioncall functionName="ScreenWidth"/>
    <functioncall functionName="ScrollCallback"/>
    <functioncall functionName="Seed"/>
    <functioncall functionName="SemaphoreInfo"/>
    <functioncall functionName="SetControllerInvalidKeys"/>
    <functioncall functionName="SetFloatUniform"/>
    <functioncall functionName="SetIntUniform"/>
    <functioncall functionName="SetInvalidKeys"/>
    <functioncall functionName="SetMat4Uniform"/>
    <functioncall functionName="SetMouseInvalidKeys"/>
    <functioncall functionName="SetVec2Uniform"/>
    <functioncall functionName="SetVec3Uniform"/>
    <functioncall functionName="SetVec4Uniform"/>
    <functioncall functionName="Severity"/>
    <functioncall functionName="Shader"/>
    <functioncall functionName="ShaderAttributeCount"/>
    <functioncall functionName="ShaderAttributes"/>
    <functioncall functionName="ShaderCompilationErrorChecking"/>
    <functioncall functionName="ShaderCount"/>
    <functioncall functionName="ShaderEnumToStr"/>
    <functioncall functionName="ShaderFile"/>
    <functioncall functionName="ShaderHandle"/>
    <functioncall functionName="ShaderModule"/>
    <functioncall functionName="ShaderName"/>
    <functioncall functionName="ShaderPath"/>
    <functioncall functionName="ShaderStages"/>
    <functioncall functionName="ShaderType"/>
    <functioncall functionName="Shader_Count"/>
    <functioncall functionName="Shader_ErrorSprite"/>
    <functioncall functionName="Shader_ErrorUI"/>
    <functioncall functionName="Shader_FrameBuffer"/>
    <functioncall functionName="Shader_LightSource"/>
    <functioncall functionName="Shader_Line"/>
    <functioncall functionName="Shader_Passthrough"/>
    <functioncall functionName="Shader_Rect"/>
    <functioncall functionName="Shader_SimpleModel"/>
    <functioncall functionName="Shader_Spritesheet"/>
    <functioncall functionName="Shader_StandardFont"/>
    <functioncall functionName="Shader_Texture"/>
    <functioncall functionName="Shader_TextureRect"/>
    <functioncall functionName="Shader_Tile"/>
    <functioncall functionName="Shader_Type"/>
    <functioncall functionName="Shader_UISprite"/>
    <functioncall functionName="Shader_Wireframe"/>
    <functioncall functionName="Shared"/>
    <functioncall functionName="ShouldClose"/>
    <functioncall functionName="ShouldCloseWindow"/>
    <functioncall functionName="Show"/>
    <functioncall functionName="ShowMouseCursor"/>
    <functioncall functionName="Sign"/>
    <functioncall functionName="SignalSemaphores"/>
    <functioncall functionName="SimpleModelShader"/>
    <functioncall functionName="Sin"/>
    <functioncall functionName="Sinom"/>
    <functioncall functionName="Size"/>
    <functioncall functionName="SizeInit"/>
    <functioncall functionName="SizeRoundedUp"/>
    <functioncall functionName="Skinned"/>
    <functioncall functionName="SkipSplashScreen"/>
    <functioncall functionName="Sound"/>
    <functioncall functionName="SoundArena"/>
    <functioncall functionName="SoundCommands"/>
    <functioncall functionName="SoundCount"/>
    <functioncall functionName="SoundDevice"/>
    <functioncall functionName="SoundsToLoad"/>
    <functioncall functionName="Source"/>
    <functioncall functionName="SpotlightData"/>
    <functioncall functionName="SpotlightUBO"/>
    <functioncall functionName="SpriteQuadVBO"/>
    <functioncall functionName="SpriteQuadVertices"/>
    <functioncall functionName="SpriteQuadVerticesSize"/>
    <functioncall functionName="SpriteSheetVAO"/>
    <functioncall functionName="SpriteVAO"/>
    <functioncall functionName="SpritesheetAnimationCount"/>
    <functioncall functionName="SpritesheetShader"/>
    <functioncall functionName="Sqrt"/>
    <functioncall functionName="Src"/>
    <functioncall functionName="StandardFontShader"/>
    <functioncall functionName="Start"/>
    <functioncall functionName="StartsWith"/>
    <functioncall functionName="StartupFileTimeChecks"/>
    <functioncall functionName="State"/>
    <functioncall functionName="Stick_Left"/>
    <functioncall functionName="Stick_Right"/>
    <functioncall functionName="Stopped"/>
    <functioncall functionName="Str"/>
    <functioncall functionName="StrCmp"/>
    <functioncall functionName="StrSep"/>
    <functioncall functionName="StructSize"/>
    <functioncall functionName="SubPath"/>
    <functioncall functionName="SubmitInfo"/>
    <functioncall functionName="Subpass"/>
    <functioncall functionName="Sum"/>
    <functioncall functionName="Surface"/>
    <functioncall functionName="Swapchain"/>
    <functioncall functionName="SwapchainCreateInfo"/>
    <functioncall functionName="SwapchainExtent"/>
    <functioncall functionName="SwapchainImageCount"/>
    <functioncall functionName="SwapchainImageFormat"/>
    <functioncall functionName="SwapchainImages"/>
    <functioncall functionName="Swapchains"/>
    <functioncall functionName="Symbol"/>
    <functioncall functionName="System"/>
    <functioncall functionName="SzFile"/>
    <functioncall functionName="T"/>
    <functioncall functionName="Target"/>
    <functioncall functionName="Temp"/>
    <functioncall functionName="TempCount"/>
    <functioncall functionName="TempGameLibraryPath"/>
    <functioncall functionName="TempRay"/>
    <functioncall functionName="TexLoc"/>
    <functioncall functionName="TexcoordLocation"/>
    <functioncall functionName="TexcoordLocation2"/>
    <functioncall functionName="Text"/>
    <functioncall functionName="Texture"/>
    <functioncall functionName="TextureColorBuffer"/>
    <functioncall functionName="TextureCount"/>
    <functioncall functionName="TextureHandle"/>
    <functioncall functionName="TextureIndex"/>
    <functioncall functionName="TextureOffset"/>
    <functioncall functionName="TextureRectShader"/>
    <functioncall functionName="TextureRectVAO"/>
    <functioncall functionName="TextureShader"/>
    <functioncall functionName="TextureSize"/>
    <functioncall functionName="Theta"/>
    <functioncall functionName="TickAnimationControllers"/>
    <functioncall functionName="TickTimers"/>
    <functioncall functionName="TileHeightHalf"/>
    <functioncall functionName="TileQuadVBO"/>
    <functioncall functionName="TileQuadVertices"/>
    <functioncall functionName="TileQuadVerticesSize"/>
    <functioncall functionName="TileShader"/>
    <functioncall functionName="TileVAO"/>
    <functioncall functionName="TileWidthHalf"/>
    <functioncall functionName="Timer"/>
    <functioncall functionName="TimerController"/>
    <functioncall functionName="TimerCount"/>
    <functioncall functionName="TimerMax"/>
    <functioncall functionName="Title"/>
    <functioncall functionName="TitleBuffer"/>
    <functioncall functionName="TmInfo"/>
    <functioncall functionName="To"/>
    <functioncall functionName="ToMatrix"/>
    <functioncall functionName="Tok"/>
    <functioncall functionName="TotalDelta"/>
    <functioncall functionName="TotalSize"/>
    <functioncall functionName="Transform"/>
    <functioncall functionName="Translate"/>
    <functioncall functionName="Transpose"/>
    <functioncall functionName="Type"/>
    <functioncall functionName="U"/>
    <functioncall functionName="UICommandCount"/>
    <functioncall functionName="UICommands"/>
    <functioncall functionName="ULONG_MAX"/>
    <functioncall functionName="UniformName"/>
    <functioncall functionName="UnloadGameCode"/>
    <functioncall functionName="Up"/>
    <functioncall functionName="Update"/>
    <functioncall functionName="UpdateLightingData"/>
    <functioncall functionName="UpdateLog"/>
    <functioncall functionName="UpdateStub"/>
    <functioncall functionName="UpdatedBufferHandleCount"/>
    <functioncall functionName="UseShader"/>
    <functioncall functionName="Used"/>
    <functioncall functionName="UserParam"/>
    <functioncall functionName="V"/>
    <functioncall functionName="V1"/>
    <functioncall functionName="V2"/>
    <functioncall functionName="V3"/>
    <functioncall functionName="VAO"/>
    <functioncall functionName="VBO"/>
    <functioncall functionName="VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT"/>
    <functioncall functionName="VK_API_VERSION_1_0"/>
    <functioncall functionName="VK_ATTACHMENT_LOAD_OP_CLEAR"/>
    <functioncall functionName="VK_ATTACHMENT_LOAD_OP_DONT_CARE"/>
    <functioncall functionName="VK_ATTACHMENT_STORE_OP_DONT_CARE"/>
    <functioncall functionName="VK_ATTACHMENT_STORE_OP_STORE"/>
    <functioncall functionName="VK_BLEND_FACTOR_ONE"/>
    <functioncall functionName="VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA"/>
    <functioncall functionName="VK_BLEND_FACTOR_SRC_ALPHA"/>
    <functioncall functionName="VK_BLEND_FACTOR_ZERO"/>
    <functioncall functionName="VK_BLEND_OP_ADD"/>
    <functioncall functionName="VK_COLOR_COMPONENT_A_BIT"/>
    <functioncall functionName="VK_COLOR_SPACE_SRGB_NONLINEAR_KHR"/>
    <functioncall functionName="VK_COMMAND_BUFFER_LEVEL_PRIMARY"/>
    <functioncall functionName="VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT"/>
    <functioncall functionName="VK_COMPONENT_SWIZZLE_IDENTITY"/>
    <functioncall functionName="VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR"/>
    <functioncall functionName="VK_CULL_MODE_BACK_BIT"/>
    <functioncall functionName="VK_DEBUG_REPORT_WARNING_BIT_EXT"/>
    <functioncall functionName="VK_EXT_DEBUG_REPORT_EXTENSION_NAME"/>
    <functioncall functionName="VK_FALSE"/>
    <functioncall functionName="VK_FORMAT_B8G8R8A8_UNORM"/>
    <functioncall functionName="VK_FRONT_FACE_CLOCKWISE"/>
    <functioncall functionName="VK_IMAGE_ASPECT_COLOR_BIT"/>
    <functioncall functionName="VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL"/>
    <functioncall functionName="VK_IMAGE_LAYOUT_PRESENT_SRC_KHR"/>
    <functioncall functionName="VK_IMAGE_LAYOUT_UNDEFINED"/>
    <functioncall functionName="VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT"/>
    <functioncall functionName="VK_IMAGE_VIEW_TYPE_2D"/>
    <functioncall functionName="VK_KHR_SWAPCHAIN_EXTENSION_NAME"/>
    <functioncall functionName="VK_LOGIC_OP_COPY"/>
    <functioncall functionName="VK_MAKE_VERSION"/>
    <functioncall functionName="VK_NULL_HANDLE"/>
    <functioncall functionName="VK_PIPELINE_BIND_POINT_GRAPHICS"/>
    <functioncall functionName="VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT"/>
    <functioncall functionName="VK_POLYGON_MODE_FILL"/>
    <functioncall functionName="VK_PRESENT_MODE_FIFO_KHR"/>
    <functioncall functionName="VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST"/>
    <functioncall functionName="VK_SAMPLE_COUNT_1_BIT"/>
    <functioncall functionName="VK_SHADER_STAGE_FRAGMENT_BIT"/>
    <functioncall functionName="VK_SHADER_STAGE_VERTEX_BIT"/>
    <functioncall functionName="VK_SHARING_MODE_CONCURRENT"/>
    <functioncall functionName="VK_SHARING_MODE_EXCLUSIVE"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_APPLICATION_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_PRESENT_INFO_KHR"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_SUBMIT_INFO"/>
    <functioncall functionName="VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR"/>
    <functioncall functionName="VK_SUBPASS_CONTENTS_INLINE"/>
    <functioncall functionName="VK_SUBPASS_EXTERNAL"/>
    <functioncall functionName="VK_TRUE"/>
    <functioncall functionName="Val"/>
    <functioncall functionName="Val1"/>
    <functioncall functionName="Val2"/>
    <functioncall functionName="ValidationLayers"/>
    <functioncall functionName="Value"/>
    <functioncall functionName="Version"/>
    <functioncall functionName="VertexBuffer"/>
    <functioncall functionName="VertexBufferSize"/>
    <functioncall functionName="VertexInputInfo"/>
    <functioncall functionName="VertexPath"/>
    <functioncall functionName="VertexShader"/>
    <functioncall functionName="VertexShaderContent"/>
    <functioncall functionName="VertexShaderModule"/>
    <functioncall functionName="VertexShaderStageInfo"/>
    <functioncall functionName="VertexString"/>
    <functioncall functionName="VertexText"/>
    <functioncall functionName="View"/>
    <functioncall functionName="ViewMatrix"/>
    <functioncall functionName="Viewport"/>
    <functioncall functionName="ViewportState"/>
    <functioncall functionName="VirtualAlloc"/>
    <functioncall functionName="VirtualFree"/>
    <functioncall functionName="VirtualProtect"/>
    <functioncall functionName="VkCleanup"/>
    <functioncall functionName="VkCommandBuffer"/>
    <functioncall functionName="VkDeviceQueueCreateInfo"/>
    <functioncall functionName="VkExtensionProperties"/>
    <functioncall functionName="VkFramebuffer"/>
    <functioncall functionName="VkImage"/>
    <functioncall functionName="VkImageView"/>
    <functioncall functionName="VkLayerProperties"/>
    <functioncall functionName="VkPhysicalDevice"/>
    <functioncall functionName="VkQueueFamilyProperties"/>
    <functioncall functionName="VkRender"/>
    <functioncall functionName="VkRenderState"/>
    <functioncall functionName="Vol"/>
    <functioncall functionName="Vp"/>
    <functioncall functionName="W"/>
    <functioncall functionName="W_"/>
    <functioncall functionName="WaitSemaphores"/>
    <functioncall functionName="WaitStages"/>
    <functioncall functionName="Width"/>
    <functioncall functionName="Win32AllocateMemory"/>
    <functioncall functionName="Win32DeallocateMemory"/>
    <functioncall functionName="Win32FileExists"/>
    <functioncall functionName="Win32FindFilesWithExtensions"/>
    <functioncall functionName="Win32FreeLibrary"/>
    <functioncall functionName="Win32LoadLibrary"/>
    <functioncall functionName="Win32LoadSymbol"/>
    <functioncall functionName="Win32OpenFileWithDialog"/>
    <functioncall functionName="Win32SaveFileWithDialog"/>
    <functioncall functionName="Window"/>
    <functioncall functionName="WindowHeight"/>
    <functioncall functionName="WindowMode"/>
    <functioncall functionName="WindowTitle"/>
    <functioncall functionName="WindowWidth"/>
    <functioncall functionName="WireframeCubeIndices"/>
    <functioncall functionName="WireframeCubeVAO"/>
    <functioncall functionName="WireframeCubeVBO"/>
    <functioncall functionName="WireframeCubeVertices"/>
    <functioncall functionName="WireframeQuadVBO"/>
    <functioncall functionName="WireframeQuadVertices"/>
    <functioncall functionName="WireframeQuadVerticesSize"/>
    <functioncall functionName="WireframeShader"/>
    <functioncall functionName="WireframeVAO"/>
    <functioncall functionName="WithOrigin"/>
    <functioncall functionName="WithSubDirectories"/>
    <functioncall functionName="X"/>
    <functioncall functionName="XAngle"/>
    <functioncall functionName="XAxis"/>
    <functioncall functionName="XOffset"/>
    <functioncall functionName="XPos"/>
    <functioncall functionName="XRotate"/>
    <functioncall functionName="X_"/>
    <functioncall functionName="XboxKey"/>
    <functioncall functionName="Y"/>
    <functioncall functionName="YAngle"/>
    <functioncall functionName="YAxis"/>
    <functioncall functionName="YOffset"/>
    <functioncall functionName="YPos"/>
    <functioncall functionName="YRotate"/>
    <functioncall functionName="Y_"/>
    <functioncall functionName="Z"/>
    <functioncall functionName="ZAngle"/>
    <functioncall functionName="ZAxis"/>
    <functioncall functionName="ZRotate"/>
    <functioncall functionName="Z_"/>
    <functioncall functionName="ZeroMemory"/>
    <functioncall functionName="ZeroSize"/>
    <functioncall functionName="Zoom"/>
    <functioncall functionName="_O_APPEND"/>
    <functioncall functionName="_SC_PAGE_SIZE"/>
    <functioncall functionName="__debugbreak"/>
    <functioncall functionName="_fdopen"/>
    <functioncall functionName="_open_osfhandle"/>
    <functioncall functionName="a"/>
    <functioncall functionName="abort"/>
    <functioncall functionName="acos"/>
    <functioncall functionName="animation_controller"/>
    <functioncall functionName="atan2"/>
    <functioncall functionName="b"/>
    <functioncall functionName="bitmap_left"/>
    <functioncall functionName="bitmap_top"/>
    <functioncall functionName="blueBits"/>
    <functioncall functionName="break"/>
    <functioncall functionName="buffer"/>
    <functioncall functionName="cFileName"/>
    <functioncall functionName="ceil"/>
    <functioncall functionName="char"/>
    <functioncall functionName="colorSpace"/>
    <functioncall functionName="continue"/>
    <functioncall functionName="cos"/>
    <functioncall functionName="currentTransform"/>
    <functioncall functionName="debug_state"/>
    <functioncall functionName="default"/>
    <functioncall functionName="difftime"/>
    <functioncall functionName="directional_light_data"/>
    <functioncall functionName="distance"/>
    <functioncall functionName="dlclose"/>
    <functioncall functionName="dlopen"/>
    <functioncall functionName="dlsym"/>
    <functioncall functionName="dot"/>
    <functioncall functionName="double"/>
    <functioncall functionName="dwHighDateTime"/>
    <functioncall functionName="dwLowDateTime"/>
    <functioncall functionName="exit"/>
    <functioncall functionName="extensionName"/>
    <functioncall functionName="false"/>
    <functioncall functionName="fclose"/>
    <functioncall functionName="fgets"/>
    <functioncall functionName="float"/>
    <functioncall functionName="floor"/>
    <functioncall functionName="fopen"/>
    <functioncall functionName="for"/>
    <functioncall functionName="format"/>
    <functioncall functionName="fprintf"/>
    <functioncall functionName="fread"/>
    <functioncall functionName="free"/>
    <functioncall functionName="fseek"/>
    <functioncall functionName="ftLastWriteTime"/>
    <functioncall functionName="ft_encoding_unicode"/>
    <functioncall functionName="ftell"/>
    <functioncall functionName="fwrite"/>
    <functioncall functionName="g"/>
    <functioncall functionName="glActiveTexture"/>
    <functioncall functionName="glAttachShader"/>
    <functioncall functionName="glBindBuffer"/>
    <functioncall functionName="glBindBufferBase"/>
    <functioncall functionName="glBindFramebuffer"/>
    <functioncall functionName="glBindRenderbuffer"/>
    <functioncall functionName="glBindTexture"/>
    <functioncall functionName="glBindVertexArray"/>
    <functioncall functionName="glBlendFunc"/>
    <functioncall functionName="glBufferData"/>
    <functioncall functionName="glCheckFramebufferStatus"/>
    <functioncall functionName="glClear"/>
    <functioncall functionName="glClearColor"/>
    <functioncall functionName="glCompileShader"/>
    <functioncall functionName="glCreateProgram"/>
    <functioncall functionName="glCreateShader"/>
    <functioncall functionName="glDebugMessageCallback"/>
    <functioncall functionName="glDeleteProgram"/>
    <functioncall functionName="glDeleteShader"/>
    <functioncall functionName="glDepthFunc"/>
    <functioncall functionName="glDisable"/>
    <functioncall functionName="glDrawArrays"/>
    <functioncall functionName="glDrawElements"/>
    <functioncall functionName="glEnable"/>
    <functioncall functionName="glEnableVertexAttribArray"/>
    <functioncall functionName="glFramebufferRenderbuffer"/>
    <functioncall functionName="glFramebufferTexture2D"/>
    <functioncall functionName="glGenBuffers"/>
    <functioncall functionName="glGenFramebuffers"/>
    <functioncall functionName="glGenRenderbuffers"/>
    <functioncall functionName="glGenTextures"/>
    <functioncall functionName="glGenVertexArrays"/>
    <functioncall functionName="glGetAttribLocation"/>
    <functioncall functionName="glGetIntegerv"/>
    <functioncall functionName="glGetShaderInfoLog"/>
    <functioncall functionName="glGetShaderiv"/>
    <functioncall functionName="glGetString"/>
    <functioncall functionName="glGetUniformBlockIndex"/>
    <functioncall functionName="glGetUniformLocation"/>
    <functioncall functionName="glLineWidth"/>
    <functioncall functionName="glLinkProgram"/>
    <functioncall functionName="glMapBuffer"/>
    <functioncall functionName="glPixelStorei"/>
    <functioncall functionName="glRenderbufferStorage"/>
    <functioncall functionName="glShaderSource"/>
    <functioncall functionName="glTexImage2D"/>
    <functioncall functionName="glTexParameteri"/>
    <functioncall functionName="glTexSubImage2D"/>
    <functioncall functionName="glUniform1f"/>
    <functioncall functionName="glUniform1fv"/>
    <functioncall functionName="glUniform1i"/>
    <functioncall functionName="glUniform2f"/>
    <functioncall functionName="glUniform3f"/>
    <functioncall functionName="glUniform4f"/>
    <functioncall functionName="glUniform4fv"/>
    <functioncall functionName="glUniformBlockBinding"/>
    <functioncall functionName="glUniformMatrix4fv"/>
    <functioncall functionName="glUnmapBuffer"/>
    <functioncall functionName="glUseProgram"/>
    <functioncall functionName="glVertexAttribPointer"/>
    <functioncall functionName="glViewport"/>
    <functioncall functionName="gladLoadGLLoader"/>
    <functioncall functionName="glfwCreateWindow"/>
    <functioncall functionName="glfwCreateWindowSurface"/>
    <functioncall functionName="glfwDestroyWindow"/>
    <functioncall functionName="glfwGetFramebufferSize"/>
    <functioncall functionName="glfwGetJoystickAxes"/>
    <functioncall functionName="glfwGetJoystickButtons"/>
    <functioncall functionName="glfwGetJoystickName"/>
    <functioncall functionName="glfwGetPrimaryMonitor"/>
    <functioncall functionName="glfwGetProcAddress"/>
    <functioncall functionName="glfwGetRequiredInstanceExtensions"/>
    <functioncall functionName="glfwGetTime"/>
    <functioncall functionName="glfwGetVideoMode"/>
    <functioncall functionName="glfwGetWindowUserPointer"/>
    <functioncall functionName="glfwInit"/>
    <functioncall functionName="glfwJoystickPresent"/>
    <functioncall functionName="glfwMakeContextCurrent"/>
    <functioncall functionName="glfwPollEvents"/>
    <functioncall functionName="glfwSetCharCallback"/>
    <functioncall functionName="glfwSetCursorPosCallback"/>
    <functioncall functionName="glfwSetErrorCallback"/>
    <functioncall functionName="glfwSetFramebufferSizeCallback"/>
    <functioncall functionName="glfwSetInputMode"/>
    <functioncall functionName="glfwSetKeyCallback"/>
    <functioncall functionName="glfwSetMouseButtonCallback"/>
    <functioncall functionName="glfwSetScrollCallback"/>
    <functioncall functionName="glfwSetWindowAspectRatio"/>
    <functioncall functionName="glfwSetWindowPos"/>
    <functioncall functionName="glfwSetWindowShouldClose"/>
    <functioncall functionName="glfwSetWindowUserPointer"/>
    <functioncall functionName="glfwSwapBuffers"/>
    <functioncall functionName="glfwSwapInterval"/>
    <functioncall functionName="glfwTerminate"/>
    <functioncall functionName="glfwWindowHint"/>
    <functioncall functionName="glfwWindowShouldClose"/>
    <functioncall functionName="glyph"/>
    <functioncall functionName="greenBits"/>
    <functioncall functionName="hFind"/>
    <functioncall functionName="hashed_pair_integer"/>
    <functioncall functionName="hashed_pair_texture_data"/>
    <functioncall functionName="height"/>
    <functioncall functionName="i"/>
    <functioncall functionName="i32"/>
    <functioncall functionName="i32vec2"/>
    <functioncall functionName="i32vec3"/>
    <functioncall functionName="if"/>
    <functioncall functionName="imm"/>
    <functioncall functionName="int16_t"/>
    <functioncall functionName="int32_t"/>
    <functioncall functionName="int64_t"/>
    <functioncall functionName="int8_t"/>
    <functioncall functionName="integer_Map_Init"/>
    <functioncall functionName="inverse"/>
    <functioncall functionName="layerName"/>
    <functioncall functionName="length"/>
    <functioncall functionName="localtime"/>
    <functioncall functionName="long"/>
    <functioncall functionName="lpstrFile"/>
    <functioncall functionName="m4"/>
    <functioncall functionName="major"/>
    <functioncall functionName="malloc"/>
    <functioncall functionName="mat4"/>
    <functioncall functionName="maxImageCount"/>
    <functioncall functionName="memcpy"/>
    <functioncall functionName="memory_block"/>
    <functioncall functionName="memset"/>
    <functioncall functionName="minor"/>
    <functioncall functionName="msg"/>
    <functioncall functionName="noreturn"/>
    <functioncall functionName="normalize"/>
    <functioncall functionName="nullptr"/>
    <functioncall functionName="ortho"/>
    <functioncall functionName="platform_state"/>
    <functioncall functionName="point"/>
    <functioncall functionName="point_light_data"/>
    <functioncall functionName="pow"/>
    <functioncall functionName="printf"/>
    <functioncall functionName="project"/>
    <functioncall functionName="quat"/>
    <functioncall functionName="r"/>
    <functioncall functionName="r32"/>
    <functioncall functionName="rand"/>
    <functioncall functionName="rect"/>
    <functioncall functionName="recti"/>
    <functioncall functionName="redBits"/>
    <functioncall functionName="refreshRate"/>
    <functioncall functionName="render_command"/>
    <functioncall functionName="render_state"/>
    <functioncall functionName="result"/>
    <functioncall functionName="return"/>
    <functioncall functionName="rgba"/>
    <functioncall functionName="rotate"/>
    <functioncall functionName="round"/>
    <functioncall functionName="rows"/>
    <functioncall functionName="s1"/>
    <functioncall functionName="s2"/>
    <functioncall functionName="sb"/>
    <functioncall functionName="sb1"/>
    <functioncall functionName="sb2"/>
    <functioncall functionName="scale"/>
    <functioncall functionName="sin"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="sound_effect"/>
    <functioncall functionName="spotlight_data"/>
    <functioncall functionName="sprintf"/>
    <functioncall functionName="sqrt"/>
    <functioncall functionName="srand"/>
    <functioncall functionName="sscanf"/>
    <functioncall functionName="st_mtime"/>
    <functioncall functionName="stat"/>
    <functioncall functionName="stbi_image_free"/>
    <functioncall functionName="stderr"/>
    <functioncall functionName="strcat"/>
    <functioncall functionName="strcmp"/>
    <functioncall functionName="strcpy"/>
    <functioncall functionName="strftime"/>
    <functioncall functionName="strlen"/>
    <functioncall functionName="strncmp"/>
    <functioncall functionName="strpbrk"/>
    <functioncall functionName="strstr"/>
    <functioncall functionName="strtok"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="sysconf"/>
    <functioncall functionName="system"/>
    <functioncall functionName="this"/>
    <functioncall functionName="time"/>
    <functioncall functionName="time_t"/>
    <functioncall functionName="translate"/>
    <functioncall functionName="transpose"/>
    <functioncall functionName="true"/>
    <functioncall functionName="u32"/>
    <functioncall functionName="u64"/>
    <functioncall functionName="uint16_t"/>
    <functioncall functionName="uint32_t"/>
    <functioncall functionName="uint64_t"/>
    <functioncall functionName="uint8_t"/>
    <functioncall functionName="umm"/>
    <functioncall functionName="unProject"/>
    <functioncall functionName="v2"/>
    <functioncall functionName="v2i"/>
    <functioncall functionName="v3"/>
    <functioncall functionName="v3i"/>
    <functioncall functionName="v4"/>
    <functioncall functionName="v4i"/>
    <functioncall functionName="vec2"/>
    <functioncall functionName="vec3"/>
    <functioncall functionName="vec4"/>
    <functioncall functionName="vkAcquireNextImageKHR"/>
    <functioncall functionName="vkAllocateCommandBuffers"/>
    <functioncall functionName="vkBeginCommandBuffer"/>
    <functioncall functionName="vkCmdBeginRenderPass"/>
    <functioncall functionName="vkCmdBindPipeline"/>
    <functioncall functionName="vkCmdDraw"/>
    <functioncall functionName="vkCmdEndRenderPass"/>
    <functioncall functionName="vkCreateCommandPool"/>
    <functioncall functionName="vkCreateDevice"/>
    <functioncall functionName="vkCreateFramebuffer"/>
    <functioncall functionName="vkCreateGraphicsPipelines"/>
    <functioncall functionName="vkCreateImageView"/>
    <functioncall functionName="vkCreateInstance"/>
    <functioncall functionName="vkCreatePipelineLayout"/>
    <functioncall functionName="vkCreateRenderPass"/>
    <functioncall functionName="vkCreateSemaphore"/>
    <functioncall functionName="vkCreateShaderModule"/>
    <functioncall functionName="vkCreateSwapchainKHR"/>
    <functioncall functionName="vkDestroyCommandPool"/>
    <functioncall functionName="vkDestroyDevice"/>
    <functioncall functionName="vkDestroyFramebuffer"/>
    <functioncall functionName="vkDestroyImageView"/>
    <functioncall functionName="vkDestroyInstance"/>
    <functioncall functionName="vkDestroyPipeline"/>
    <functioncall functionName="vkDestroyPipelineLayout"/>
    <functioncall functionName="vkDestroyRenderPass"/>
    <functioncall functionName="vkDestroySemaphore"/>
    <functioncall functionName="vkDestroyShaderModule"/>
    <functioncall functionName="vkDestroySurfaceKHR"/>
    <functioncall functionName="vkDestroySwapchainKHR"/>
    <functioncall functionName="vkDeviceWaitIdle"/>
    <functioncall functionName="vkEndCommandBuffer"/>
    <functioncall functionName="vkEnumerateDeviceExtensionProperties"/>
    <functioncall functionName="vkEnumerateInstanceLayerProperties"/>
    <functioncall functionName="vkEnumeratePhysicalDevices"/>
    <functioncall functionName="vkGetDeviceQueue"/>
    <functioncall functionName="vkGetInstanceProcAddr"/>
    <functioncall functionName="vkGetPhysicalDeviceFeatures"/>
    <functioncall functionName="vkGetPhysicalDeviceProperties"/>
    <functioncall functionName="vkGetPhysicalDeviceQueueFamilyProperties"/>
    <functioncall functionName="vkGetPhysicalDeviceSurfaceCapabilitiesKHR"/>
    <functioncall functionName="vkGetPhysicalDeviceSurfaceFormatsKHR"/>
    <functioncall functionName="vkGetPhysicalDeviceSurfacePresentModesKHR"/>
    <functioncall functionName="vkGetPhysicalDeviceSurfaceSupportKHR"/>
    <functioncall functionName="vkGetSwapchainImagesKHR"/>
    <functioncall functionName="vkQueuePresentKHR"/>
    <functioncall functionName="vkQueueSubmit"/>
    <functioncall functionName="vkQueueWaitIdle"/>
    <functioncall functionName="void"/>
    <functioncall functionName="w"/>
    <functioncall functionName="while"/>
    <functioncall functionName="width"/>
    <functioncall functionName="x"/>
    <functioncall functionName="xyz"/>
    <functioncall functionName="y"/>
    <functioncall functionName="z"/>
  </FileInfo>
</analyzerinfo>
